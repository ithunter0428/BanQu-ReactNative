{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ScreenStackHeaderRightView } from 'react-native-screens';\nimport { Feather, Entypo } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PostEditor(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var _useState = useState(new Animated.Value(-40)),\n      _useState2 = _slicedToArray(_useState, 2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  useEffect(function () {\n    Animated.timing(offset, {\n      toValue: 0,\n      duration: 800\n    }).start();\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: [styles.input, {\n        outline: 'none'\n      }],\n      onChangeText: onChangeText,\n      autoFocus: true,\n      value: text.slice(0, 99),\n      multiline: true,\n      placeholder: \"Wanna talk about...\"\n    }), _jsx(Animated.View, {\n      style: {\n        transform: [{\n          translateX: offset\n        }]\n      },\n      children: _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'flex-end'\n        },\n        children: [_jsxs(Text, {\n          style: styles.letterCount,\n          children: [text.length, \"/100\"]\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Dashboard', {\n              is_modal: true\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.button,\n            children: _jsx(Feather, {\n              name: \"arrow-right\",\n              size: 20,\n              color: \"white\",\n              style: {\n                marginLeft: 1\n              }\n            })\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 21,\n    backgroundColor: '#0D0C13',\n    flex: 1\n  },\n  input: {\n    color: '#fff',\n    fontWeight: 400,\n    fontSize: 22,\n    lineHeight: 30,\n    paddingLeft: 14,\n    paddingRight: 14,\n    marginBottom: 20,\n    selectionColor: '#FF7C24',\n    caretColor: '#FF7C24',\n    flex: 1\n  },\n  button: {\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    backgroundColor: '#FF7C24',\n    shadowColor: \"rgba(0, 0, 0, 0.45)\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.45,\n    shadowRadius: 4,\n    color: '#FFFFFF',\n    float: 'right',\n    textAlign: 'center',\n    alignItems: 'center',\n    fontSize: 32\n  },\n  letterCount: {\n    textAlign: 'center',\n    fontWeight: 500,\n    fontSize: 14,\n    lineHeight: 24,\n    color: 'rgba(255,255,255,0.35)',\n    marginRight: 22,\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["React","FunctionComponent","useEffect","useState","ScreenStackHeaderRightView","Feather","Entypo","PostEditor","navigation","text","onChangeText","Animated","Value","offset","setOffset","timing","toValue","duration","start","styles","container","input","outline","slice","transform","translateX","flexDirection","justifyContent","letterCount","length","navigate","is_modal","button","marginLeft","StyleSheet","create","padding","backgroundColor","flex","color","fontWeight","fontSize","lineHeight","paddingLeft","paddingRight","marginBottom","selectionColor","caretColor","width","height","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","float","textAlign","alignItems","marginRight","marginTop"],"sources":["E:/Upwork/React Native/AwesomeProject/src/Pages/PostEditor/postEditor.jsx"],"sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport { SafeAreaView, StyleSheet, TextInput, Text, TouchableOpacity, View, Animated } from \"react-native\";\r\nimport { ScreenStackHeaderRightView } from 'react-native-screens';\r\nimport { Feather, Entypo } from '@expo/vector-icons';\r\n\r\nexport default function PostEditor({navigation}) {\r\n\r\n    const [text, onChangeText] = React.useState(\"\");\r\n    const [offset, setOffset] = useState(new Animated.Value(-40)) // Animation\r\n\r\n    useEffect(() => {\r\n        Animated.timing(offset, { toValue: 0, duration: 800 }).start();\r\n    })\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TextInput\r\n                style={[styles.input, {outline: 'none'}]}\r\n                onChangeText={onChangeText}\r\n                autoFocus={true}\r\n                value={text.slice(0, 99)}\r\n                multiline={true}\r\n                placeholder=\"Wanna talk about...\"\r\n            />\r\n\r\n            <Animated.View style={{ transform: [{translateX: offset}] }}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n                    \r\n                    <Text style={styles.letterCount}>\r\n                        {text.length}/100\r\n                    </Text>\r\n\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Dashboard',{is_modal: true})}>\r\n                        <Text style={styles.button}>\r\n                        <Feather\r\n                            name=\"arrow-right\"\r\n                            size={20}\r\n                            color=\"white\"\r\n                            style={{ marginLeft: 1 }}\r\n                        />\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                </View>\r\n            </Animated.View>\r\n        \r\n        </View >\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        // borderRadius: 30,\r\n        padding: 21,\r\n        // Left: 21,\r\n        backgroundColor: '#0D0C13',\r\n        flex: 1\r\n    },\r\n\r\n    input: {\r\n        color: '#fff',\r\n        fontWeight: 400,\r\n        fontSize: 22,\r\n        lineHeight: 30,\r\n        paddingLeft: 14,\r\n        paddingRight: 14,\r\n        marginBottom: 20,\r\n        selectionColor: '#FF7C24',\r\n        caretColor: '#FF7C24',\r\n        flex: 1,\r\n    },  \r\n\r\n    button: {\r\n        width: 64,\r\n        height: 64,\r\n        borderRadius: 32,\r\n        backgroundColor: '#FF7C24',\r\n        shadowColor: \"rgba(0, 0, 0, 0.45)\",\r\n        shadowOffset: {width:0, height: 4}, \r\n        shadowOpacity: 0.45,\r\n        shadowRadius: 4,\r\n        color: '#FFFFFF',\r\n        float: 'right',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 32,\r\n    },\r\n\r\n    letterCount: {\r\n        textAlign: 'center',\r\n        fontWeight: 500,\r\n        fontSize: 14,\r\n        lineHeight: 24,\r\n        color: 'rgba(255,255,255,0.35)',\r\n        marginRight: 22,\r\n        marginTop: 20\r\n    }\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}