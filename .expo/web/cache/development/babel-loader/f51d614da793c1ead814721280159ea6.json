{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { useRoute } from '@react-navigation/native';\nimport PostContent from \"../../Components/PostContent\";\nimport BroadcastForm from \"./BroadcastForm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar BroadcastScreen = function BroadcastScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fadeOut = _useState2[0],\n      setfadeOut = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(1)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fadeAnimation = _useState4[0],\n      setFadeAnim = _useState4[1];\n\n  var route = useRoute();\n  return _jsxs(View, {\n    style: {\n      backgroundColor: '#000000',\n      flex: 1\n    },\n    children: [_jsx(PostContent, {\n      fadeOut: fadeOut,\n      navigation: navigation\n    }), _jsx(BroadcastForm, {\n      navigation: navigation,\n      onFadePost: onFadePost\n    })]\n  });\n};\n\nexport default BroadcastScreen;","map":{"version":3,"names":["React","useState","useRoute","PostContent","BroadcastForm","BroadcastScreen","navigation","fadeOut","setfadeOut","Animated","Value","fadeAnimation","setFadeAnim","route","backgroundColor","flex","onFadePost"],"sources":["E:/Upwork/React Native/AwesomeProject/src/Pages/BroadcastTransition/index.tsx"],"sourcesContent":["import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Animated, Image, Text } from 'react-native';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport PostContent from '../../Components/PostContent';\r\nimport BroadcastForm from './BroadcastForm';\r\n\r\nconst BroadcastScreen: FunctionComponent = ({ navigation }) => {\r\n    \r\n    const [fadeOut, setfadeOut] = useState(false)\r\n    const [fadeAnimation, setFadeAnim] = useState(new Animated.Value(1))\r\n    const route = useRoute()\r\n\r\n\r\n    return (\r\n        // <Animated.View style={{ opacity: fadeAnimation}}>\r\n          <View style={{ backgroundColor: '#000000', flex: 1 }}>\r\n                <PostContent fadeOut={fadeOut} navigation={navigation} />\r\n                <BroadcastForm navigation={navigation} onFadePost={onFadePost}/>\r\n          </View>\r\n        // </Animated.View>\r\n    );\r\n}\r\n\r\nexport default BroadcastScreen;"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAA8D,OAA9D;;;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;;;;AAEA,IAAMC,eAAkC,GAAG,SAArCA,eAAqC,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAE3D,gBAA8BL,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOM,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAqCP,QAAQ,CAAC,IAAIQ,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAA7C;EAAA;EAAA,IAAOC,aAAP;EAAA,IAAsBC,WAAtB;;EACA,IAAMC,KAAK,GAAGX,QAAQ,EAAtB;EAGA,OAEM,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEY,eAAe,EAAE,SAAnB;MAA8BC,IAAI,EAAE;IAApC,CAAb;IAAA,WACM,KAAC,WAAD;MAAa,OAAO,EAAER,OAAtB;MAA+B,UAAU,EAAED;IAA3C,EADN,EAEM,KAAC,aAAD;MAAe,UAAU,EAAEA,UAA3B;MAAuC,UAAU,EAAEU;IAAnD,EAFN;EAAA,EAFN;AAQH,CAfD;;AAiBA,eAAeX,eAAf"},"metadata":{},"sourceType":"module"}