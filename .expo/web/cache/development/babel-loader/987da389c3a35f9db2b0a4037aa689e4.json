{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { useState } from 'react';\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PostForm(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      online = _useState2[0],\n      setOnline = _useState2[1];\n\n  var _useState3 = useState('all'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tab = _useState4[0],\n      setTab = _useState4[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.border\n    }), _jsx(Text, {\n      style: styles.label,\n      onPress: function onPress() {\n        navigation.navigate('location');\n      },\n      children: \"Location\"\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Picker, {\n        style: styles.input,\n        children: _jsx(Picker.Item, {\n          label: \"Beijing\",\n          value: \"bj\"\n        })\n      })\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Status\"\n    }), _jsxs(View, {\n      style: styles.input,\n      children: [_jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: online == true ? 'Online' : 'Offline'\n      }), _jsx(Switch, {\n        value: online,\n        onValueChange: function onValueChange() {\n          setOnline(!online);\n        }\n      })]\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Interested\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        marginBottom: 26\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setTab('all');\n        },\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            style: tab == 'all' ? styles.category_active : styles.category_normal,\n            children: \"All\"\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setTab('fin');\n        },\n        children: _jsx(Text, {\n          style: tab == 'fin' ? styles.category_active : styles.category_normal,\n          children: \"Finance\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setTab('mus');\n        },\n        children: _jsx(Text, {\n          style: tab == 'mus' ? styles.category_active : styles.category_normal,\n          children: \"Music\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setTab('tra');\n        },\n        children: _jsx(Text, {\n          style: tab == 'tra' ? styles.category_active : styles.category_normal,\n          children: \"Travel\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('broadcast', {\n          message: route.params.message\n        });\n      },\n      children: _jsx(Text, {\n        style: styles.button,\n        children: \"Next\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 30,\n    padding: 21,\n    paddingTop: 0,\n    backgroundColor: '#212027'\n  },\n  border: {\n    width: 28.5,\n    borderBottomWidth: 3,\n    borderColor: '#FFFFFF',\n    alignSelf: 'center',\n    marginTop: 12,\n    borderRadius: 1\n  },\n  button: {\n    backgroundColor: '#FF7C24',\n    borderRadius: 12,\n    paddingTop: 18,\n    paddingBottom: 18,\n    textAlign: 'center',\n    fontSize: 18,\n    color: '#FFFFFF'\n  },\n  label: {\n    fontSize: 16,\n    lineHeight: 21,\n    marginTop: 24,\n    marginBottom: 11,\n    alignItems: 'center',\n    color: '#FFFFFF'\n  },\n  input: {\n    backgroundColor: 'rgba(255,255,255,0.1)',\n    borderRadius: 12,\n    paddingLeft: 21,\n    paddingRight: 21,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: 54,\n    alignItems: 'center'\n  },\n  category_active: {\n    backgroundColor: '#FFFFFF',\n    color: '#000000',\n    fontWeight: 600,\n    borderRadius: 14,\n    paddingLeft: 17,\n    paddingRight: 17,\n    paddingTop: 5,\n    paddingBottom: 5,\n    marginRight: 6\n  },\n  category_normal: {\n    backgroundColor: 'rgba(255,255,255,0.1)',\n    color: '#FFFFFF',\n    fontWeight: 500,\n    borderRadius: 14,\n    paddingLeft: 17,\n    paddingRight: 17,\n    paddingTop: 5,\n    paddingBottom: 5,\n    marginRight: 6\n  }\n});","map":{"version":3,"names":["React","useState","useRoute","PostForm","navigation","route","online","setOnline","tab","setTab","styles","container","border","label","navigate","input","color","flexDirection","justifyContent","marginBottom","category_active","category_normal","message","params","button","StyleSheet","create","borderRadius","padding","paddingTop","backgroundColor","width","borderBottomWidth","borderColor","alignSelf","marginTop","paddingBottom","textAlign","fontSize","lineHeight","alignItems","paddingLeft","paddingRight","height","fontWeight","marginRight"],"sources":["E:/Upwork/React Native/AwesomeProject/src/Pages/Post/PostForm/postForm.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet, Image, Text, Button, TouchableOpacity, Switch, Picker } from 'react-native';\r\nimport { Actions } from 'react-native-router-flux';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\n\r\nexport default function PostForm({navigation}) {\r\n\r\n    const route = useRoute();\r\n\r\n    const [online, setOnline] = useState(true);\r\n    const [tab, setTab] = useState('all');\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.border}></View>\r\n            <Text style={styles.label} onPress={() => {navigation.navigate('location')}}>Location</Text>\r\n            <TouchableOpacity >\r\n                <Picker style={styles.input} >\r\n                    <Picker.Item label=\"Beijing\" value=\"bj\" />\r\n                    {/* <Picker.Item label=\"New York\" value=\"ny\"/> */}\r\n                    {/* <Picker.Item label=\"Ottawa\" value=\"ot\"/> */}\r\n                </Picker>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.label}>Status</Text>\r\n            <View style={styles.input}>\r\n                <Text style={{ color: 'white' }}>{online == true ? 'Online' : 'Offline'}</Text>\r\n                <Switch\r\n                    value={online}\r\n                    onValueChange={() => { setOnline(!online)}}\r\n                />\r\n            </View>\r\n\r\n            <Text style={styles.label}>Interested</Text>\r\n            <View style={{ flexDirection: 'row', justifyContent: 'flex-start', marginBottom: 26 }}>\r\n                <TouchableOpacity onPress={() => setTab('all')}>\r\n                    <View >\r\n                    <Text style={tab=='all'?styles.category_active:styles.category_normal}>All</Text>    \r\n                    </View>\r\n                </TouchableOpacity>\r\n                \r\n                <TouchableOpacity onPress={() => setTab('fin')}>\r\n                    <Text style={tab=='fin'?styles.category_active:styles.category_normal}>Finance</Text>    \r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => setTab('mus')}>\r\n                    <Text style={tab=='mus'?styles.category_active:styles.category_normal}>Music</Text>    \r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => setTab('tra')}>\r\n                    <Text style={tab=='tra'?styles.category_active:styles.category_normal}>Travel</Text>    \r\n                </TouchableOpacity> \r\n\r\n            </View>\r\n\r\n            <TouchableOpacity onPress={() => { navigation.navigate('broadcast', {message: route.params.message})}}>\r\n                <Text style={styles.button}>\r\n                   Next\r\n                </Text>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderRadius: 30,\r\n        padding: 21,\r\n        paddingTop: 0,\r\n        // Left: 21,\r\n        backgroundColor: '#212027'\r\n    },\r\n\r\n    border: {\r\n        width: 28.5,\r\n        borderBottomWidth: 3,\r\n        borderColor: '#FFFFFF',\r\n        alignSelf: 'center',\r\n        marginTop: 12,\r\n        borderRadius: 1\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: '#FF7C24',\r\n        borderRadius: 12,\r\n        paddingTop: 18,\r\n        paddingBottom: 18,\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        color: '#FFFFFF'\r\n    },\r\n\r\n    label: {\r\n        fontSize: 16,\r\n        lineHeight: 21,\r\n        marginTop: 24,\r\n        marginBottom: 11,\r\n        alignItems: 'center',\r\n        color: '#FFFFFF'\r\n    },\r\n\r\n    input: {\r\n        backgroundColor: 'rgba(255,255,255,0.1)',\r\n        borderRadius: 12,\r\n        paddingLeft: 21,\r\n        paddingRight: 21,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        height: 54,\r\n        alignItems: 'center',\r\n        // color: '#FFFFFF'\r\n    },\r\n\r\n    category_active: {\r\n        backgroundColor: '#FFFFFF',\r\n        color: '#000000',\r\n        fontWeight: 600,\r\n        borderRadius: 14,\r\n        paddingLeft: 17,\r\n        paddingRight: 17,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        marginRight: 6,\r\n      },\r\n      category_normal: {\r\n        backgroundColor: 'rgba(255,255,255,0.1)',\r\n        color: '#FFFFFF',\r\n        fontWeight: 500,\r\n        borderRadius: 14,\r\n        paddingLeft: 17,\r\n        paddingRight: 17,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        marginRight: 6,\r\n      }\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}