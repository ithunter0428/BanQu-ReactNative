{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { createNavigator, ThemeColors, SafeAreaView } from 'react-navigation';\nimport DrawerRouter from \"../routers/DrawerRouter\";\nimport DrawerView from \"../views/DrawerView\";\nimport DrawerItems from \"../views/DrawerNavigatorItems\";\n\nvar defaultContentComponent = function defaultContentComponent(props) {\n  return React.createElement(ScrollView, {\n    alwaysBounceVertical: false\n  }, React.createElement(SafeAreaView, {\n    forceInset: {\n      top: 'always',\n      horizontal: 'never'\n    }\n  }, React.createElement(DrawerItems, props)));\n};\n\nvar DefaultDrawerConfig = {\n  drawerWidth: function drawerWidth() {\n    var _Dimensions$get = Dimensions.get('window'),\n        height = _Dimensions$get.height,\n        width = _Dimensions$get.width;\n\n    var smallerAxisSize = Math.min(height, width);\n    var isLandscape = width > height;\n    var isTablet = smallerAxisSize >= 600;\n    var appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    var maxWidth = isTablet ? 320 : 280;\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: I18nManager.isRTL ? 'right' : 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: {\n    light: ThemeColors.light.bodyContent,\n    dark: ThemeColors.dark.bodyContent\n  },\n  overlayColor: {\n    light: 'rgba(0, 0, 0, 0.5)',\n    dark: 'rgba(0, 0, 0, 0.5)'\n  },\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide'\n};\n\nvar DrawerNavigator = function DrawerNavigator(routeConfigs) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var mergedConfig = _objectSpread(_objectSpread({}, DefaultDrawerConfig), config);\n\n  var drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  var navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;","map":{"version":3,"sources":["createDrawerNavigator.tsx"],"names":["defaultContentComponent","props","top","horizontal","DefaultDrawerConfig","drawerWidth","width","Dimensions","smallerAxisSize","Math","isLandscape","isTablet","appBarHeight","Platform","maxWidth","contentComponent","drawerPosition","I18nManager","keyboardDismissMode","drawerBackgroundColor","light","ThemeColors","dark","bodyContent","overlayColor","drawerType","hideStatusBar","statusBarAnimation","DrawerNavigator","config","mergedConfig","drawerRouter","DrawerRouter","navigator","createNavigator"],"mappings":";;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;;AAEA,SAAA,eAAA,EAAA,WAAA,EAAA,YAAA,QAAA,kBAAA;AAQA,OAAA,YAAA;AACA,OAAA,UAAA;AACA,OAAA,WAAA;;AASA,IAAMA,uBAAuB,GAAIC,SAA3BD,uBAA2BC,CAAAA,KAAD;EAAA,OAC9B,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;IAAY,oBAAoB,EAAE;EAAlC,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;IAAc,UAAU,EAAE;MAAEC,GAAG,EAAL,QAAA;MAAiBC,UAAU,EAAE;IAA7B;EAA1B,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAHN,KAGM,CADF,CADF,CAD8B;AAAA,CAAhC;;AAQA,IAAMC,mBAA2C,GAAG;EAClDC,WAAW,EAAE,uBAAM;IAMjB,sBAA0BE,UAAU,CAAVA,GAAAA,CAA1B,QAA0BA,CAA1B;IAAA,IAAM,MAAN,mBAAM,MAAN;IAAA,IAAgBD,KAAhB,mBAAgBA,KAAhB;;IACA,IAAME,eAAe,GAAGC,IAAI,CAAJA,GAAAA,CAAAA,MAAAA,EAAxB,KAAwBA,CAAxB;IACA,IAAMC,WAAW,GAAGJ,KAAK,GAAzB,MAAA;IACA,IAAMK,QAAQ,GAAGH,eAAe,IAAhC,GAAA;IACA,IAAMI,YAAY,GAAGC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAyBH,WAAW,GAAA,EAAA,GAApCG,EAAAA,GAArB,EAAA;IACA,IAAMC,QAAQ,GAAGH,QAAQ,GAAA,GAAA,GAAzB,GAAA;IAEA,OAAOF,IAAI,CAAJA,GAAAA,CAASD,eAAe,GAAxBC,YAAAA,EAAP,QAAOA,CAAP;EAdgD,CAAA;EAgBlDM,gBAAgB,EAhBkC,uBAAA;EAiBlDC,cAAc,EAAEC,WAAW,CAAXA,KAAAA,GAAAA,OAAAA,GAjBkC,MAAA;EAkBlDC,mBAAmB,EAlB+B,SAAA;EAmBlDC,qBAAqB,EAAE;IACrBC,KAAK,EAAEC,WAAW,CAAXA,KAAAA,CADc,WAAA;IAErBC,IAAI,EAAED,WAAW,CAAXA,IAAAA,CAAiBE;EAFF,CAnB2B;EAuBlDC,YAAY,EAAE;IACZJ,KAAK,EADO,oBAAA;IAEZE,IAAI,EAAE;EAFM,CAvBoC;EA2BlDG,UAAU,EA3BwC,OAAA;EA4BlDC,aAAa,EA5BqC,KAAA;EA6BlDC,kBAAkB,EAAE;AA7B8B,CAApD;;AAgCA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,YAAA,EAWnB;EAAA,IANHC,MAMG,uEAXmB,EAWnB;;EACH,IAAMC,YAAY,mCAAG,mBAAH,GAAgCD,MAAhC,CAAlB;;EACA,IAAME,YAAY,GAAGC,YAAY,CAAA,YAAA,EAF9B,YAE8B,CAAjC;EAGA,IAAMC,SAAS,GAAGC,eAAe,CAAA,UAAA,EAAA,YAAA,EAAjC,YAAiC,CAAjC;EAKA,OAAA,SAAA;AArBF,CAAA;;AAwBA,eAAA,eAAA","sourcesContent":["import * as React from 'react';\nimport { Dimensions, Platform, ScrollView, I18nManager } from 'react-native';\nimport {\n  createNavigator,\n  ThemeColors,\n  SafeAreaView,\n  NavigationRouteConfigMap,\n  CreateNavigatorConfig,\n  NavigationRoute,\n} from 'react-navigation';\nimport DrawerRouter from '../routers/DrawerRouter';\nimport DrawerView from '../views/DrawerView';\nimport DrawerItems from '../views/DrawerNavigatorItems';\nimport {\n  NavigationDrawerOptions,\n  NavigationDrawerProp,\n  NavigationDrawerConfig,\n  NavigationDrawerRouterConfig,\n  DrawerContentComponentProps,\n} from '../types';\n\nconst defaultContentComponent = (props: DrawerContentComponentProps) => (\n  <ScrollView alwaysBounceVertical={false}>\n    <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n      <DrawerItems {...props} />\n    </SafeAreaView>\n  </ScrollView>\n);\n\nconst DefaultDrawerConfig: NavigationDrawerConfig = {\n  drawerWidth: () => {\n    /*\n     * Default drawer width is screen width - header height\n     * with a max width of 280 on mobile and 320 on tablet\n     * https://material.io/guidelines/patterns/navigation-drawer.html\n     */\n    const { height, width } = Dimensions.get('window');\n    const smallerAxisSize = Math.min(height, width);\n    const isLandscape = width > height;\n    const isTablet = smallerAxisSize >= 600;\n    const appBarHeight = Platform.OS === 'ios' ? (isLandscape ? 32 : 44) : 56;\n    const maxWidth = isTablet ? 320 : 280;\n\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: I18nManager.isRTL ? 'right' : 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: {\n    light: ThemeColors.light.bodyContent,\n    dark: ThemeColors.dark.bodyContent,\n  },\n  overlayColor: {\n    light: 'rgba(0, 0, 0, 0.5)',\n    dark: 'rgba(0, 0, 0, 0.5)',\n  },\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n};\n\nconst DrawerNavigator = (\n  routeConfigs: NavigationRouteConfigMap<\n    NavigationDrawerOptions,\n    NavigationDrawerProp<NavigationRoute, any>\n  >,\n  config: CreateNavigatorConfig<\n    NavigationDrawerConfig,\n    NavigationDrawerRouterConfig,\n    NavigationDrawerOptions,\n    NavigationDrawerProp<NavigationRoute, any>\n  > = {}\n) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n\n  // TODO: don't have time to fix it right now\n  const navigator = createNavigator(\n    DrawerView as any,\n    drawerRouter,\n    mergedConfig\n  );\n  return navigator;\n};\n\nexport default DrawerNavigator;\n"]},"metadata":{},"sourceType":"module"}