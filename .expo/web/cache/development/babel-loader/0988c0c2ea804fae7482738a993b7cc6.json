{"ast":null,"code":"import _ from 'lodash';\nimport { NavigationActions, StackActions } from 'react-navigation';\nimport * as ActionConst from \"./ActionConst\";\nimport { getActiveState, popPrevious } from \"./State\";\nexport default function createReducer(store) {\n  return function (state, action) {\n    var NavigationStore = require(\"./Store\").default;\n\n    var navigationStore = store || new NavigationStore();\n    var type = action.type,\n        routeName = action.routeName;\n\n    if (type === ActionConst.POP_TO) {\n      var nextScene = '';\n      var newState = state;\n      var currentState = state;\n\n      while (newState && nextScene !== routeName) {\n        newState = navigationStore.getStateForAction(StackActions.pop(), currentState);\n\n        if (newState) {\n          nextScene = getActiveState(newState).routeName;\n\n          if (nextScene !== routeName && _.isEqual(currentState, newState)) {\n            console.warn(\"popTo called with an unknown routeName: \" + routeName + \", current scene: \" + nextScene);\n            break;\n          }\n\n          if (nextScene !== routeName) {\n            currentState = newState;\n          }\n        }\n      }\n\n      return nextScene === routeName ? newState : state;\n    }\n\n    if (type === ActionConst.REPLACE) {\n      var _newState = navigationStore.getStateForAction(NavigationActions.navigate({\n        routeName: routeName,\n        params: action.params\n      }), state);\n\n      var res = popPrevious(_newState, routeName);\n      return res;\n    }\n\n    return navigationStore.getStateForAction(action, state) || state;\n  };\n}","map":{"version":3,"names":["_","NavigationActions","StackActions","ActionConst","getActiveState","popPrevious","createReducer","store","state","action","NavigationStore","require","default","navigationStore","type","routeName","POP_TO","nextScene","newState","currentState","getStateForAction","pop","isEqual","console","warn","REPLACE","navigate","params","res"],"sources":["E:/Upwork/React Native/AwesomeProject/node_modules/react-native-router-flux/src/Reducer.js"],"sourcesContent":["import _ from 'lodash';\nimport { NavigationActions, StackActions } from 'react-navigation';\nimport * as ActionConst from './ActionConst';\nimport { getActiveState, popPrevious } from './State';\n\nexport default function createReducer(store) {\n  return (state, action) => {\n    const NavigationStore = require('./Store').default;\n    const navigationStore = store || new NavigationStore();\n    const { type, routeName } = action;\n    if (type === ActionConst.POP_TO) {\n      let nextScene = '';\n      let newState = state;\n      let currentState = state;\n      while (newState && nextScene !== routeName) {\n        newState = navigationStore.getStateForAction(StackActions.pop(), currentState);\n        if (newState) {\n          nextScene = getActiveState(newState).routeName;\n          if (nextScene !== routeName && _.isEqual(currentState, newState)) {\n            console.warn(`popTo called with an unknown routeName: ${routeName}, current scene: ${nextScene}`);\n            break;\n          }\n          if (nextScene !== routeName) {\n            currentState = newState;\n          }\n        }\n      }\n      return nextScene === routeName ? newState : state;\n    }\n    if (type === ActionConst.REPLACE) {\n      const newState = navigationStore.getStateForAction(\n        NavigationActions.navigate({\n          routeName,\n          params: action.params,\n        }),\n        state,\n      );\n      const res = popPrevious(newState, routeName);\n      return res;\n    }\n    return navigationStore.getStateForAction(action, state) || state;\n  };\n}\n"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,kBAAhD;AACA,OAAO,KAAKC,WAAZ;AACA,SAASC,cAAT,EAAyBC,WAAzB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC3C,OAAO,UAACC,KAAD,EAAQC,MAAR,EAAmB;IACxB,IAAMC,eAAe,GAAGC,OAAO,WAAP,CAAmBC,OAA3C;;IACA,IAAMC,eAAe,GAAGN,KAAK,IAAI,IAAIG,eAAJ,EAAjC;IACA,IAAQI,IAAR,GAA4BL,MAA5B,CAAQK,IAAR;IAAA,IAAcC,SAAd,GAA4BN,MAA5B,CAAcM,SAAd;;IACA,IAAID,IAAI,KAAKX,WAAW,CAACa,MAAzB,EAAiC;MAC/B,IAAIC,SAAS,GAAG,EAAhB;MACA,IAAIC,QAAQ,GAAGV,KAAf;MACA,IAAIW,YAAY,GAAGX,KAAnB;;MACA,OAAOU,QAAQ,IAAID,SAAS,KAAKF,SAAjC,EAA4C;QAC1CG,QAAQ,GAAGL,eAAe,CAACO,iBAAhB,CAAkClB,YAAY,CAACmB,GAAb,EAAlC,EAAsDF,YAAtD,CAAX;;QACA,IAAID,QAAJ,EAAc;UACZD,SAAS,GAAGb,cAAc,CAACc,QAAD,CAAd,CAAyBH,SAArC;;UACA,IAAIE,SAAS,KAAKF,SAAd,IAA2Bf,CAAC,CAACsB,OAAF,CAAUH,YAAV,EAAwBD,QAAxB,CAA/B,EAAkE;YAChEK,OAAO,CAACC,IAAR,8CAAwDT,SAAxD,yBAAqFE,SAArF;YACA;UACD;;UACD,IAAIA,SAAS,KAAKF,SAAlB,EAA6B;YAC3BI,YAAY,GAAGD,QAAf;UACD;QACF;MACF;;MACD,OAAOD,SAAS,KAAKF,SAAd,GAA0BG,QAA1B,GAAqCV,KAA5C;IACD;;IACD,IAAIM,IAAI,KAAKX,WAAW,CAACsB,OAAzB,EAAkC;MAChC,IAAMP,SAAQ,GAAGL,eAAe,CAACO,iBAAhB,CACfnB,iBAAiB,CAACyB,QAAlB,CAA2B;QACzBX,SAAS,EAATA,SADyB;QAEzBY,MAAM,EAAElB,MAAM,CAACkB;MAFU,CAA3B,CADe,EAKfnB,KALe,CAAjB;;MAOA,IAAMoB,GAAG,GAAGvB,WAAW,CAACa,SAAD,EAAWH,SAAX,CAAvB;MACA,OAAOa,GAAP;IACD;;IACD,OAAOf,eAAe,CAACO,iBAAhB,CAAkCX,MAAlC,EAA0CD,KAA1C,KAAoDA,KAA3D;EACD,CAnCD;AAoCD"},"metadata":{},"sourceType":"module"}