{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"tabBarStyle\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"showLabel\", \"labelStyle\", \"tabStyle\"],\n    _excluded2 = [\"type\", \"cardStyle\", \"back\", \"backButtonImage\", \"backButtonTextStyle\", \"backTitle\", \"backTitleEnabled\", \"backToInitial\", \"component\", \"drawerIcon\", \"drawerImage\", \"drawerPosition\", \"getTitle\", \"headerLayoutPreset\", \"headerStyle\", \"headerTitleStyle\", \"hideDrawerButton\", \"hideNavBar\", \"hideTabBar\", \"icon\", \"init\", \"left\", \"leftButton\", \"leftButtonImage\", \"leftButtonTextStyle\", \"leftTitle\", \"navBar\", \"navBarButtonColor\", \"navigationBarStyle\", \"navigationBarTitleImage\", \"navigationBarTitleImageStyle\", \"navTransparent\", \"onLeft\", \"onRight\", \"panHandlers\", \"renderBackButton\", \"renderNavigationBar\", \"renderTitle\", \"right\", \"rightButton\", \"rightButtonImage\", \"rightButtonTextStyle\", \"rightTitle\", \"tabBarIcon\", \"tabBarLabel\", \"title\", \"titleStyle\"],\n    _excluded3 = [\"navigation\"],\n    _excluded4 = [\"navigator\", \"renderer\", \"contentComponent\", \"drawerWidth\", \"drawerLockMode\", \"tabBarPosition\", \"lazy\", \"duration\"],\n    _excluded5 = [\"component\", \"type\", \"path\", \"onEnter\", \"onExit\", \"on\", \"failure\", \"success\", \"wrap\", \"initial\"],\n    _excluded6 = [\"timeout\", \"key\"];\n\nvar _actionMap;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { createAppContainer, NavigationActions, StackActions } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerActions } from 'react-navigation-drawer';\nimport { createMaterialTopTabNavigator, createBottomTabNavigator } from 'react-navigation-tabs';\nimport PropTypes from 'prop-types';\nimport createReducer from \"./Reducer\";\nimport * as ActionConst from \"./ActionConst\";\nimport { OnEnter, OnExit, assert } from \"./Util\";\nimport { LeftButton, RightButton, BackButton } from \"./NavBar\";\nimport LightboxRenderer from \"./LightboxRenderer\";\nimport _drawerImage from \"../images/menu_burger.png\";\nimport { getActiveState, getParent, getRouteNameByKey } from \"./State\";\nimport Modal from \"./Modal\";\nimport Lightbox from \"./Lightbox\";\nimport Drawer from \"./Drawer\";\nimport Tabs from \"./Tabs\";\nimport Overlay from \"./Overlay\";\nimport OverlayRenderer from \"./OverlayRenderer\";\nimport createStackNavigatorHOC from \"./createStackNavigatorHOC\";\nimport createTabNavigatorHOC from \"./createTabNavigatorHOC\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RightNavBarButton;\nvar LeftNavBarButton;\nvar BackNavBarButton;\nvar counter = 0;\nexport var actionMap = (_actionMap = {}, _defineProperty(_actionMap, ActionConst.JUMP, 'jump'), _defineProperty(_actionMap, ActionConst.PUSH, 'push'), _defineProperty(_actionMap, ActionConst.REPLACE, 'replace'), _defineProperty(_actionMap, ActionConst.BACK, 'pop'), _defineProperty(_actionMap, ActionConst.BACK_ACTION, 'pop'), _defineProperty(_actionMap, ActionConst.POP_TO, 'popTo'), _defineProperty(_actionMap, ActionConst.REFRESH, 'refresh'), _defineProperty(_actionMap, ActionConst.RESET, 'reset'), _defineProperty(_actionMap, ActionConst.PUSH_OR_POP, 'push'), _actionMap);\nvar reservedKeys = ['addRef', 'back', 'children', 'create', 'dispatch', 'drawerClose', 'drawerOpen', 'execute', 'left', 'leftButton', 'navBar', 'navigate', 'on', 'onEnter', 'onExit', 'onLeft', 'onRight', 'pop', 'popTo', 'push', 'refresh', 'refs', 'removeRef', 'renderLeftButton', 'renderRightButton', 'renderTitle', 'replace', 'right', 'rightButton', 'run', 'setParams', 'title'];\nvar dontInheritKeys = ['backToInitial', 'children', 'component', 'contentComponent', 'drawer', 'hideNavBar', 'hideTabBar', 'key', 'lightbox', 'modal', 'navigator', 'navTransparent', 'overlay', 'ref', 'style', 'tabBarComponent', 'tabs', 'title', 'type'];\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nfunction getProperties() {\n  var component = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var res = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(reservedKeys), _step; !(_step = _iterator()).done;) {\n    var key = _step.value;\n\n    if (component[key]) {\n      res[key] = component[key];\n    }\n  }\n\n  delete res.children;\n  return res;\n}\n\nfunction createTabBarOptions(_ref) {\n  var tabBarStyle = _ref.tabBarStyle,\n      activeTintColor = _ref.activeTintColor,\n      inactiveTintColor = _ref.inactiveTintColor,\n      activeBackgroundColor = _ref.activeBackgroundColor,\n      inactiveBackgroundColor = _ref.inactiveBackgroundColor,\n      showLabel = _ref.showLabel,\n      labelStyle = _ref.labelStyle,\n      tabStyle = _ref.tabStyle,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return _objectSpread(_objectSpread({}, props), {}, {\n    style: tabBarStyle,\n    activeTintColor: activeTintColor,\n    inactiveTintColor: inactiveTintColor,\n    activeBackgroundColor: activeBackgroundColor,\n    inactiveBackgroundColor: inactiveBackgroundColor,\n    showLabel: showLabel,\n    labelStyle: labelStyle,\n    tabStyle: tabStyle\n  });\n}\n\nfunction createNavigationOptions(params) {\n  var type = params.type,\n      cardStyle = params.cardStyle,\n      back = params.back,\n      backButtonImage = params.backButtonImage,\n      backButtonTextStyle = params.backButtonTextStyle,\n      backTitle = params.backTitle,\n      backTitleEnabled = params.backTitleEnabled,\n      backToInitial = params.backToInitial,\n      component = params.component,\n      drawerIcon = params.drawerIcon,\n      drawerImage = params.drawerImage,\n      drawerPosition = params.drawerPosition,\n      getTitle = params.getTitle,\n      headerLayoutPreset = params.headerLayoutPreset,\n      headerStyle = params.headerStyle,\n      headerTitleStyle = params.headerTitleStyle,\n      hideDrawerButton = params.hideDrawerButton,\n      hideNavBar = params.hideNavBar,\n      hideTabBar = params.hideTabBar,\n      icon = params.icon,\n      init = params.init,\n      left = params.left,\n      leftButton = params.leftButton,\n      leftButtonImage = params.leftButtonImage,\n      leftButtonTextStyle = params.leftButtonTextStyle,\n      leftTitle = params.leftTitle,\n      navBar = params.navBar,\n      navBarButtonColor = params.navBarButtonColor,\n      navigationBarStyle = params.navigationBarStyle,\n      navigationBarTitleImage = params.navigationBarTitleImage,\n      navigationBarTitleImageStyle = params.navigationBarTitleImageStyle,\n      navTransparent = params.navTransparent,\n      onLeft = params.onLeft,\n      onRight = params.onRight,\n      panHandlers = params.panHandlers,\n      renderBackButton = params.renderBackButton,\n      renderNavigationBar = params.renderNavigationBar,\n      renderTitle = params.renderTitle,\n      right = params.right,\n      rightButton = params.rightButton,\n      rightButtonImage = params.rightButtonImage,\n      rightButtonTextStyle = params.rightButtonTextStyle,\n      rightTitle = params.rightTitle,\n      tabBarIcon = params.tabBarIcon,\n      tabBarLabel = params.tabBarLabel,\n      title = params.title,\n      titleStyle = params.titleStyle,\n      props = _objectWithoutProperties(params, _excluded2);\n\n  var NavBar = renderNavigationBar || navBar;\n\n  if (component && component.navigationOptions) {\n    return component.navigationOptions;\n  }\n\n  return function (_ref2) {\n    var navigation = _ref2.navigation,\n        screenProps = _ref2.screenProps;\n    var navigationParams = navigation.state.params || {};\n\n    var state = _objectSpread(_objectSpread(_objectSpread({\n      navigation: navigation\n    }, params), navigationParams), screenProps);\n\n    var res = _objectSpread(_objectSpread({\n      animationEnabled: !(type === ActionConst.REPLACE || type === 'replace' || type === ActionConst.RESET || type === 'reset')\n    }, props), {}, {\n      cardStyle: navigationParams.cardStyle || cardStyle,\n      headerBackImage: navigationParams.backButtonImage || backButtonImage,\n      headerBackTitle: getValue(navigationParams.backTitle || backTitle, state),\n      headerBackTitleEnabled: navigationParams.backTitleEnabled || backTitleEnabled,\n      headerLayoutPreset: navigationParams.headerLayoutPreset || headerLayoutPreset,\n      headerLeft: function headerLeft() {\n        return getValue(navigationParams.left || left || leftButton || params.renderLeftButton, state);\n      },\n      headerRight: function headerRight() {\n        return getValue(navigationParams.right || right || rightButton || params.renderRightButton, state);\n      },\n      headerStyle: getValue(navigationParams.headerStyle || headerStyle || navigationBarStyle, state),\n      headerTintColor: navBarButtonColor || props.tintColor || navigationParams.tintColor || navigationParams.headerTintColor,\n      headerTitle: getValue(navigationParams.renderTitle || renderTitle || params.renderTitle, state),\n      headerTitleStyle: headerTitleStyle || titleStyle,\n      title: getValue(navigationParams.title || title || getTitle, state)\n    });\n\n    var NavBarFromParams = navigationParams.renderNavigationBar || navigationParams.navBar;\n\n    if (NavBarFromParams != null) {\n      if (NavBarFromParams) {\n        res.header = function (data) {\n          return _jsx(NavBarFromParams, _objectSpread(_objectSpread({\n            navigation: navigation\n          }, state), data));\n        };\n      }\n    } else if (NavBar) {\n      res.header = function (data) {\n        return _jsx(NavBar, _objectSpread(_objectSpread({\n          navigation: navigation\n        }, state), data));\n      };\n    }\n\n    if (typeof navigationParams.panHandlers !== 'undefined') {\n      if (navigationParams.panHandlers === null) {\n        res.gesturesEnabled = false;\n      }\n    } else if (panHandlers === null) {\n      res.gesturesEnabled = false;\n    }\n\n    if (navigationBarTitleImage) {\n      res.headerTitle = _jsx(Image, {\n        source: navigationBarTitleImage,\n        style: navigationBarTitleImageStyle\n      });\n    }\n\n    if (tabBarLabel) {\n      res.tabBarLabel = tabBarLabel;\n    }\n\n    if (tabBarIcon || icon) {\n      var Icon = tabBarIcon || icon;\n\n      res.tabBarIcon = function (data) {\n        return _jsx(Icon, _objectSpread(_objectSpread({}, state), data));\n      };\n    }\n\n    var componentData = {};\n\n    if (component) {\n      for (var _i = 0, _arr = ['onRight', 'onLeft', 'rightButton', 'leftButton', 'leftTitle', 'rightTitle', 'rightButtonImage', 'leftButtonImage', 'rightButtonTextStyle', 'leftButtonTextStyle', 'rightButtonIconStyle', 'leftButtonIconStyle', 'leftButtonTintColor', 'rightButtonTintColor']; _i < _arr.length; _i++) {\n        var key = _arr[_i];\n\n        if (component[key]) {\n          componentData[key] = component[key];\n        }\n      }\n    }\n\n    if (rightButtonImage || rightTitle || params.renderRightButton || onRight || navigationParams.onRight || navigationParams.rightTitle || navigationParams.rightButtonImage || rightButtonTextStyle || (drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition === 'right') {\n      res.headerRight = function () {\n        return getValue(navigationParams.right || navigationParams.rightButton || params.renderRightButton, _objectSpread(_objectSpread({}, navigationParams), screenProps)) || _jsx(RightNavBarButton, _objectSpread(_objectSpread(_objectSpread({\n          navigation: navigation\n        }, params), navigationParams), componentData));\n      };\n    }\n\n    if (leftButtonImage || backButtonImage || backTitle || leftTitle || params.renderLeftButton || leftButtonTextStyle || renderBackButton || backButtonTextStyle || onLeft || navigationParams.leftTitle || navigationParams.onLeft || navigationParams.leftButtonImage || navigationParams.backButtonImage || navigationParams.backTitle || (drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition !== 'right') {\n      var _leftButton = navigationParams.left || navigationParams.leftButton || params.renderLeftButton;\n\n      res.headerLeft = function () {\n        return getValue(_leftButton, _objectSpread(_objectSpread(_objectSpread({}, params), navigationParams), screenProps)) || (onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage) || drawerImage || drawerIcon) && _jsx(LeftNavBarButton, _objectSpread(_objectSpread(_objectSpread({\n          navigation: navigation\n        }, params), navigationParams), componentData)) || res.headerLeft || (init ? null : !_leftButton && renderBackButton && renderBackButton(state) || !_leftButton && _jsx(BackNavBarButton, _objectSpread({\n          navigation: navigation\n        }, state))) || null;\n      };\n    }\n\n    if (back) {\n      res.headerLeft = renderBackButton && renderBackButton(state) || function () {\n        return _jsx(BackNavBarButton, _objectSpread({\n          navigation: navigation\n        }, state));\n      };\n    }\n\n    if (typeof navigationParams.left !== 'undefined' || typeof navigationParams.leftButton !== 'undefined' || typeof navigationParams.renderLeftButton !== 'undefined') {\n      if (navigationParams.left === null || navigationParams.leftButton === null || navigationParams.renderLeftButton === null) {\n        res.headerLeft = null;\n      }\n    }\n\n    var routeParams = navigation.state.routes && navigation.state.routes[navigation.state.index].params;\n\n    if (navigationParams.hideTabBar != null) {\n      if (navigationParams.hideTabBar) {\n        res.tabBarVisible = false;\n      }\n    } else if (hideTabBar) {\n      res.tabBarVisible = false;\n    } else if (routeParams && routeParams.hideTabBar) {\n      res.tabBarVisible = false;\n    }\n\n    if (navigationParams.hideNavBar != null) {\n      if (navigationParams.hideNavBar) {\n        res.header = null;\n      }\n    } else if (hideNavBar) {\n      res.header = null;\n    }\n\n    if (navTransparent) {\n      res.headerTransparent = true;\n      res.headerStyle = {};\n    }\n\n    if (backToInitial) {\n      var userDefinedTabBarOnPress = res.tabBarOnPress;\n\n      res.tabBarOnPress = function (data) {\n        if (userDefinedTabBarOnPress) {\n          console.warn('backToInitial and tabBarOnPress were both defined and might cause unexpected navigation behaviors. I hope you know what you are doing ;-)');\n          userDefinedTabBarOnPress(data);\n        }\n\n        if (data.navigation && data.navigation.state.index !== 0) {\n          data.navigation.dispatch(StackActions.popToTop());\n        } else {\n          data.defaultHandler();\n        }\n      };\n    }\n\n    return res;\n  };\n}\n\nfunction originalRouteName(routeName) {\n  if (routeName.startsWith('_')) {\n    return routeName.substring(1);\n  }\n\n  return routeName;\n}\n\nfunction isStatelessComponent(Component) {\n  return !Component.prototype || typeof Component.prototype.render !== 'function';\n}\n\nfunction extendProps(props, store) {\n  if (!props) {\n    return {};\n  }\n\n  var res = _objectSpread({}, props);\n\n  var _loop = function _loop(transition) {\n    if (reservedKeys.indexOf(transition) === -1 && transition.startsWith('on') && transition.charAt(2) >= 'A' && transition.charAt(2) <= 'Z' && typeof props[transition] === 'string') {\n      if (store[props[transition]]) {\n        res[transition] = function (params) {\n          return store[props[transition]](params);\n        };\n      }\n    }\n  };\n\n  for (var _i2 = 0, _Object$keys = Object.keys(props); _i2 < _Object$keys.length; _i2++) {\n    var transition = _Object$keys[_i2];\n\n    _loop(transition);\n  }\n\n  return res;\n}\n\nfunction createWrapper(Component, wrapBy, store) {\n  if (!Component) {\n    return null;\n  }\n\n  var wrapper = wrapBy || function (props) {\n    return props;\n  };\n\n  if (!isStatelessComponent(Component)) {\n    var Wrapped = function (_React$Component) {\n      _inherits(Wrapped, _React$Component);\n\n      var _super = _createSuper(Wrapped);\n\n      function Wrapped() {\n        var _this;\n\n        _classCallCheck(this, Wrapped);\n\n        _this = _super.call(this);\n        _this.onRef = _this.onRef.bind(_assertThisInitialized(_this));\n        return _this;\n      }\n\n      _createClass(Wrapped, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var navigation = this.props.navigation;\n\n          if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n            store.addRef(originalRouteName(navigation.state.routeName), this.ref);\n          }\n\n          if (this.ref && this.ref.onEnter) {\n            this.ref.onEnter(navigation && navigation.state);\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var navigation = this.props.navigation;\n\n          if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n            store.deleteRef(originalRouteName(navigation.state.routeName));\n          }\n\n          if (this.ref && this.ref.onExit) {\n            this.ref.onExit(navigation && navigation.state);\n          }\n\n          this.ref = null;\n        }\n      }, {\n        key: \"onRef\",\n        value: function onRef(ref) {\n          this.ref = ref;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var navigation = this.props.navigation;\n\n          if (!navigation || !navigation.state) {\n            return _jsx(Component, _objectSpread({\n              ref: this.onRef\n            }, this.props));\n          }\n\n          return _jsx(Component, _objectSpread(_objectSpread(_objectSpread({\n            ref: this.onRef\n          }, this.props), extendProps(navigation.state.params, store)), {}, {\n            name: navigation.state.routeName\n          }));\n        }\n      }]);\n\n      return Wrapped;\n    }(React.Component);\n\n    Wrapped.propTypes = {\n      navigation: PropTypes.shape().isRequired\n    };\n    return wrapper(Wrapped);\n  }\n\n  function StatelessWrapped(_ref3) {\n    var navigation = _ref3.navigation,\n        props = _objectWithoutProperties(_ref3, _excluded3);\n\n    return _jsx(Component, _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n      navigation: navigation\n    }, extendProps(navigation.state.params, store)), {}, {\n      name: navigation.state.routeName\n    }));\n  }\n\n  StatelessWrapped.propTypes = {\n    navigation: PropTypes.shape().isRequired\n  };\n  return wrapper(StatelessWrapped);\n}\n\nfunction filterParam() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (data.toString() !== '[object Object]') {\n    return {\n      data: data\n    };\n  }\n\n  var proto = (data || {}).constructor.name;\n\n  if (!data || proto !== 'Object') {\n    return {};\n  }\n\n  return data;\n}\n\nfunction uniteParams(routeName, params) {\n  var res = {};\n\n  for (var _iterator2 = _createForOfIteratorHelperLoose(params), _step2; !(_step2 = _iterator2()).done;) {\n    var param = _step2.value;\n\n    if (param) {\n      res = _objectSpread(_objectSpread({}, res), filterParam(param));\n    }\n  }\n\n  res.routeName = routeName;\n  return res;\n}\n\nvar defaultSuccess = function defaultSuccess() {};\n\nvar defaultFailure = function defaultFailure() {};\n\nvar NavigationStore = function () {\n  function NavigationStore() {\n    var _this2 = this;\n\n    _classCallCheck(this, NavigationStore);\n\n    this.getStateForAction = null;\n    this.reducer = null;\n    this._navigator = null;\n    this.externalDispatch = null;\n    this.externalState = null;\n    this.prevState = null;\n    this.externalAction = {};\n    this.refs = {};\n    this.states = {};\n    this.isLogical = {};\n\n    this.setCustomReducer = function (Navigator) {\n      _this2.getStateForAction = Navigator.router.getStateForAction;\n      var reducer = createReducer(_this2);\n\n      Navigator.router.getStateForAction = function (cmd, state) {\n        return _this2.reducer ? _this2.reducer(state, cmd) : reducer(state, cmd);\n      };\n    };\n\n    this.onEnterHandler = function _callee(currentScene) {\n      var handler, success, failure, res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this2.states[currentScene]) {\n                _context.next = 15;\n                break;\n              }\n\n              handler = _this2[currentScene + OnEnter];\n              success = _this2.states[currentScene].success || defaultSuccess;\n              failure = _this2.states[currentScene].failure || defaultFailure;\n\n              if (!handler) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(handler(_this2.currentParams, _this2.state));\n\n            case 8:\n              res = _context.sent;\n\n              if (res) {\n                success(res);\n              } else {\n                failure();\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              failure({\n                error: _context.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 12]], Promise);\n    };\n\n    this.onExitHandler = function (prevScene) {\n      if (prevScene) {\n        var exitHandler = _this2[prevScene + OnExit];\n\n        if (exitHandler) {\n          try {\n            var res = exitHandler(_this2.state);\n\n            if (res instanceof Promise) {\n              res.then(defaultSuccess, defaultFailure);\n            }\n          } catch (e) {\n            console.error('Error during onExit handler:', e);\n          }\n        }\n      }\n    };\n\n    this.onNavigationStateChange = function _callee2(prevState, currentState, action) {\n      var activeState, currentScene, routeName;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.state = currentState;\n              _this2.prevState = prevState;\n              activeState = getActiveState(_this2.state);\n              currentScene = activeState.routeName;\n              _this2.currentParams = _objectSpread(_objectSpread({}, activeState.params), action.params);\n              _this2.currentScene = currentScene;\n              _this2.prevScene = _this2.prevState ? getActiveState(_this2.prevState).routeName : null;\n\n              if (_this2.currentScene !== _this2.prevScene) {\n                _this2.onExitHandler(_this2.prevScene);\n\n                setTimeout(function () {\n                  return _this2.dispatch({\n                    type: ActionConst.FOCUS,\n                    routeName: _this2.currentScene,\n                    params: _this2.currentParams\n                  });\n                });\n\n                _this2.onEnterHandler(currentScene);\n              } else {\n                routeName = getRouteNameByKey(_this2.state, action.key);\n\n                if (action.type === 'Navigation/DRAWER_OPENED') {\n                  _this2.onEnterHandler(routeName);\n                } else if (action.type === 'Navigation/DRAWER_CLOSED') {\n                  _this2.onExitHandler(routeName);\n                }\n              }\n\n              if (_this2.onStateChange) {\n                _this2.onStateChange(prevState, currentState, action);\n              }\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.setTopLevelNavigator = function (navigatorRef) {\n      _this2._navigator = navigatorRef;\n    };\n\n    this.addRef = function (name, ref) {\n      _this2.refs[name] = ref;\n    };\n\n    this.deleteRef = function (name) {\n      delete _this2.refs[name];\n    };\n\n    this.create = function (scene) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var wrapBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (props) {\n        return props;\n      };\n      assert(!Array.isArray(scene), 'Router should contain only one scene, please wrap your scenes with root Scene ');\n      RightNavBarButton = wrapBy(RightButton);\n      LeftNavBarButton = wrapBy(LeftButton);\n      BackNavBarButton = wrapBy(BackButton);\n\n      var Navigator = _this2.processScene(scene, params, [], wrapBy);\n\n      _this2.onNavigationStateChange(null, Navigator.router.getStateForAction(NavigationActions.init()), NavigationActions.init());\n\n      _this2.setCustomReducer(Navigator);\n\n      return createAppContainer(Navigator);\n    };\n\n    this.createAction = function (name) {\n      return function (args) {\n        if (_this2.isLogical[name]) {\n          _this2[name](args);\n        } else {\n          setTimeout(function () {\n            return _this2[name](args);\n          });\n        }\n      };\n    };\n\n    this.processScene = function (scene) {\n      var _ref4;\n\n      var inheritProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var clones = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var wrapBy = arguments.length > 3 ? arguments[3] : undefined;\n      assert(scene.props, 'props should be defined');\n\n      if (!scene.props.children) {\n        return null;\n      }\n\n      var res = {};\n      var order = [];\n\n      var _scene$props = scene.props,\n          navigator = _scene$props.navigator,\n          renderer = _scene$props.renderer,\n          contentComponent = _scene$props.contentComponent,\n          drawerWidth = _scene$props.drawerWidth,\n          drawerLockMode = _scene$props.drawerLockMode,\n          tabBarPosition = _scene$props.tabBarPosition,\n          lazy = _scene$props.lazy,\n          duration = _scene$props.duration,\n          parentProps = _objectWithoutProperties(_scene$props, _excluded4);\n\n      var tabs = parentProps.tabs,\n          modal = parentProps.modal,\n          lightbox = parentProps.lightbox,\n          overlay = parentProps.overlay,\n          drawer = parentProps.drawer,\n          transitionConfig = parentProps.transitionConfig,\n          tabBarComponent = parentProps.tabBarComponent;\n\n      if (scene.type === Modal) {\n        modal = true;\n      } else if (scene.type === Drawer) {\n        drawer = true;\n      } else if (scene.type === Lightbox) {\n        lightbox = true;\n      } else if (scene.type === Tabs) {\n        tabs = true;\n      } else if (scene.type === Overlay) {\n        overlay = true;\n      }\n\n      if (duration !== undefined && !transitionConfig) {\n        transitionConfig = function transitionConfig() {\n          return {\n            transitionSpec: {\n              duration: duration,\n              timing: Animated.timing,\n              easing: Easing.step0\n            }\n          };\n        };\n      }\n\n      var commonProps = _objectSpread(_objectSpread({}, inheritProps), parentProps);\n\n      delete commonProps.children;\n      delete commonProps.component;\n\n      for (var _i3 = 0, _Object$keys2 = Object.keys(commonProps); _i3 < _Object$keys2.length; _i3++) {\n        var pkey = _Object$keys2[_i3];\n\n        if (dontInheritKeys.includes(pkey) && (pkey === 'type' || pkey === 'hideNavBar' || !parentProps[pkey])) {\n          delete commonProps[pkey];\n        }\n      }\n\n      if (drawer) {\n        commonProps.drawerImage = commonProps.drawerImage || _drawerImage;\n      }\n\n      var children = !Array.isArray(parentProps.children) ? [parentProps.children] : (_ref4 = []).concat.apply(_ref4, _toConsumableArray(parentProps.children));\n\n      if (!drawer && !tabs && !overlay) {\n        children.push.apply(children, _toConsumableArray(clones));\n      }\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(children), _step3; !(_step3 = _iterator3()).done;) {\n        var child = _step3.value;\n\n        if (child && child.props.clone) {\n          if (clones.indexOf(child) === -1) {\n            clones.push(child);\n          }\n        }\n      }\n\n      var initialRouteName;\n      var initialRouteParams;\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose(children), _step4; !(_step4 = _iterator4()).done;) {\n        var _child = _step4.value;\n\n        if (!_child) {\n          continue;\n        }\n\n        var key = _child.key || \"key\" + (counter += 1);\n        var init = key === children[0].key;\n        assert(reservedKeys.indexOf(key) === -1, \"Scene name cannot be reserved word: \" + _child.key);\n\n        var _child$props = _child.props,\n            component = _child$props.component,\n            _child$props$type = _child$props.type,\n            type = _child$props$type === void 0 ? tabs || drawer ? 'jump' : 'push' : _child$props$type,\n            path = _child$props.path,\n            onEnter = _child$props.onEnter,\n            onExit = _child$props.onExit,\n            on = _child$props.on,\n            failure = _child$props.failure,\n            success = _child$props.success,\n            wrap = _child$props.wrap,\n            _child$props$initial = _child$props.initial,\n            initial = _child$props$initial === void 0 ? false : _child$props$initial,\n            props = _objectWithoutProperties(_child$props, _excluded5);\n\n        if (!_this2.states[key]) {\n          _this2.states[key] = {};\n        }\n\n        for (var _i4 = 0, _Object$keys3 = Object.keys(props); _i4 < _Object$keys3.length; _i4++) {\n          var transition = _Object$keys3[_i4];\n\n          if (reservedKeys.indexOf(transition) === -1 && props[transition] instanceof Function) {\n            _this2.states[key][transition] = props[transition];\n          }\n        }\n\n        delete props.children;\n\n        if (success) {\n          _this2.states[key].success = success instanceof Function ? success : _this2.createAction(success);\n        }\n\n        if (failure) {\n          _this2.states[key].failure = failure instanceof Function ? failure : _this2.createAction(failure);\n        }\n\n        if (path) {\n          _this2.states[key].path = path;\n        }\n\n        var screen = {\n          screen: createWrapper(component, wrapBy, _this2) || _this2.processScene(_child, commonProps, clones) || lightbox && function () {\n            return null;\n          },\n          navigationOptions: createNavigationOptions(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, commonProps), {}, {\n            hideNavBar: parentProps.hideNavBar\n          }, getProperties(component)), _child.props), {}, {\n            init: init,\n            component: component\n          }))\n        };\n        var wrapNavBar = drawer || tabs && !navigator && !renderer || wrap;\n\n        if (wrap === false || commonProps.wrap === false) {\n          wrapNavBar = false;\n        }\n\n        if (component && wrapNavBar) {\n          res[key] = {\n            screen: _this2.processScene({\n              key: key,\n              props: {\n                children: {\n                  key: \"_\" + key,\n                  props: _objectSpread(_objectSpread({}, _child.props), {}, {\n                    wrap: false\n                  })\n                }\n              }\n            }, commonProps, clones, wrapBy),\n            navigationOptions: createNavigationOptions(_objectSpread(_objectSpread(_objectSpread({}, commonProps), _child.props), {}, {\n              hideNavBar: true\n            }))\n          };\n        } else {\n          res[key] = screen;\n        }\n\n        props.init = true;\n\n        if (!_this2[key]) {\n          _this2.isLogical[key] = !!component;\n          _this2[key] = new Function('actions', 'props', 'type', \"return function \" + key.replace(/\\W/g, '_') + \"(params){ actions.execute(type, '\" + key + \"', props, params)}\")(_this2, _objectSpread(_objectSpread({\n            error: ''\n          }, commonProps), props), type);\n        }\n\n        if ((onEnter || on || component && component.onEnter) && !_this2[key + OnEnter]) {\n          _this2[key + OnEnter] = onEnter || on || component.onEnter;\n        }\n\n        if ((onExit || component && component.onExit) && !_this2[key + OnExit]) {\n          _this2[key + OnExit] = onExit || component.onExit;\n        }\n\n        order.push(key);\n\n        if (initial || _child.props.initial || !initialRouteName) {\n          initialRouteName = key;\n          initialRouteParams = _objectSpread(_objectSpread({}, commonProps), props);\n        }\n      }\n\n      var mode = modal ? 'modal' : 'card';\n\n      var navigationConfig = _objectSpread(_objectSpread({\n        lazy: lazy,\n        initialRouteName: initialRouteName,\n        initialRouteParams: initialRouteParams,\n        contentComponent: contentComponent,\n        order: order\n      }, commonProps), {}, {\n        navigationOptions: createNavigationOptions(commonProps)\n      });\n\n      if (navigator) {\n        return navigator(res, navigationConfig);\n      }\n\n      if (renderer) {\n        return tabs ? createTabNavigatorHOC(renderer)(res, navigationConfig) : createStackNavigatorHOC(renderer)(res, navigationConfig);\n      }\n\n      if (lightbox) {\n        return createStackNavigatorHOC(LightboxRenderer)(res, _objectSpread(_objectSpread({\n          mode: mode,\n          initialRouteParams: initialRouteParams,\n          initialRouteName: initialRouteName\n        }, commonProps), {}, {\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      if (tabs) {\n        var createTabNavigator = createMaterialTopTabNavigator;\n\n        if (tabBarPosition !== 'top') {\n          createTabNavigator = createBottomTabNavigator;\n        }\n\n        return createTabNavigator(res, _objectSpread(_objectSpread({\n          lazy: lazy,\n          tabBarComponent: tabBarComponent,\n          initialRouteName: initialRouteName,\n          initialRouteParams: initialRouteParams,\n          tabBarPosition: tabBarPosition,\n          order: order\n        }, commonProps), {}, {\n          tabBarOptions: createTabBarOptions(commonProps),\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      if (drawer) {\n        var config = _objectSpread({\n          initialRouteName: initialRouteName,\n          contentComponent: contentComponent,\n          order: order,\n          drawerOpenRoute: 'DrawerOpen',\n          drawerCloseRoute: 'DrawerClose',\n          drawerToggleRoute: 'DrawerToggle'\n        }, commonProps);\n\n        if (drawerWidth) {\n          config.drawerWidth = drawerWidth;\n        }\n\n        if (drawerLockMode) {\n          config.drawerLockMode = drawerLockMode;\n        }\n\n        return createDrawerNavigator(res, config);\n      }\n\n      if (overlay) {\n        return createTabNavigatorHOC(OverlayRenderer)(res, _objectSpread(_objectSpread({\n          lazy: lazy,\n          initialRouteName: initialRouteName,\n          contentComponent: contentComponent,\n          initialRouteParams: initialRouteParams,\n          order: order\n        }, commonProps), {}, {\n          tabBarOptions: createTabBarOptions(commonProps),\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      return createStackNavigator(res, _objectSpread(_objectSpread({\n        mode: mode,\n        initialRouteParams: initialRouteParams,\n        initialRouteName: initialRouteName\n      }, commonProps), {}, {\n        transitionConfig: transitionConfig,\n        navigationOptions: createNavigationOptions(commonProps)\n      }));\n    };\n\n    this.dispatch = function (action) {\n      if (_this2.externalDispatch) {\n        _this2.externalAction = action;\n\n        _this2.externalDispatch(action);\n      } else if (_this2._navigator) {\n        _this2._navigator.dispatch(action);\n      }\n    };\n\n    this.execute = function (actionType, routeName) {\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      var res = uniteParams(routeName, params);\n      var overridenType = res.type || actionType;\n      var type = actionMap[overridenType] || overridenType;\n\n      if (type === 'pop') {\n        _this2[type](res);\n      } else {\n        _this2[type](routeName, res);\n      }\n    };\n\n    this.push = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this2.dispatch({\n        type: StackActions.PUSH,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.jump = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this2.dispatch({\n        type: NavigationActions.NAVIGATE,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.drawerOpen = function () {\n      _this2.dispatch(DrawerActions.openDrawer());\n    };\n\n    this.drawerClose = function () {\n      _this2.dispatch(DrawerActions.closeDrawer());\n    };\n\n    this.drawerToggle = function () {\n      _this2.dispatch(DrawerActions.toggleDrawer());\n    };\n\n    this.refresh = function (data) {\n      var sceneKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var params = filterParam(data);\n\n      var _getActiveState = getActiveState(_this2.state),\n          key = _getActiveState.key;\n\n      _this2.dispatch(NavigationActions.setParams({\n        key: sceneKey || key,\n        params: params\n      }));\n    };\n\n    this.pop = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var timeout = _ref5.timeout,\n          key = _ref5.key,\n          params = _objectWithoutProperties(_ref5, _excluded6);\n\n      var res = filterParam(params);\n\n      if (timeout) {\n        setTimeout(function () {\n          return _this2.pop(params);\n        }, timeout);\n      } else {\n        _this2.dispatch(NavigationActions.back({\n          key: key\n        }));\n\n        if (res.refresh) {\n          _this2.refresh(res.refresh);\n        }\n      }\n\n      return true;\n    };\n\n    this.popTo = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this2.dispatch({\n        type: ActionConst.POP_TO,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.popAndPush = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this2.dispatch({\n        type: ActionConst.POP_AND_PUSH,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.replace = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this2.dispatch({\n        type: ActionConst.REPLACE,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.reset = function (routeName, data) {\n      var params = filterParam(data);\n      var parent = getParent(_this2.state, routeName);\n\n      _this2.dispatch(StackActions.reset({\n        index: 0,\n        key: parent ? parent.key : null,\n        actions: [NavigationActions.navigate({\n          routeName: routeName,\n          params: params\n        })]\n      }));\n    };\n  }\n\n  _createClass(NavigationStore, [{\n    key: \"externalState\",\n    set: function set(state) {\n      if (state && this.externalDispatch) {\n        this.onNavigationStateChange(this.state, state, this.externalAction);\n        this.state = state;\n      }\n    }\n  }]);\n\n  return NavigationStore;\n}();\n\nexport { NavigationStore as default };","map":{"version":3,"names":["React","createAppContainer","NavigationActions","StackActions","createStackNavigator","createDrawerNavigator","DrawerActions","createMaterialTopTabNavigator","createBottomTabNavigator","PropTypes","createReducer","ActionConst","OnEnter","OnExit","assert","LeftButton","RightButton","BackButton","LightboxRenderer","_drawerImage","getActiveState","getParent","getRouteNameByKey","Modal","Lightbox","Drawer","Tabs","Overlay","OverlayRenderer","createStackNavigatorHOC","createTabNavigatorHOC","RightNavBarButton","LeftNavBarButton","BackNavBarButton","counter","actionMap","JUMP","PUSH","REPLACE","BACK","BACK_ACTION","POP_TO","REFRESH","RESET","PUSH_OR_POP","reservedKeys","dontInheritKeys","getValue","value","params","Function","getProperties","component","res","key","children","createTabBarOptions","tabBarStyle","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","labelStyle","tabStyle","props","style","createNavigationOptions","type","cardStyle","back","backButtonImage","backButtonTextStyle","backTitle","backTitleEnabled","backToInitial","drawerIcon","drawerImage","drawerPosition","getTitle","headerLayoutPreset","headerStyle","headerTitleStyle","hideDrawerButton","hideNavBar","hideTabBar","icon","init","left","leftButton","leftButtonImage","leftButtonTextStyle","leftTitle","navBar","navBarButtonColor","navigationBarStyle","navigationBarTitleImage","navigationBarTitleImageStyle","navTransparent","onLeft","onRight","panHandlers","renderBackButton","renderNavigationBar","renderTitle","right","rightButton","rightButtonImage","rightButtonTextStyle","rightTitle","tabBarIcon","tabBarLabel","title","titleStyle","NavBar","navigationOptions","navigation","screenProps","navigationParams","state","animationEnabled","headerBackImage","headerBackTitle","headerBackTitleEnabled","headerLeft","renderLeftButton","headerRight","renderRightButton","headerTintColor","tintColor","headerTitle","NavBarFromParams","header","data","gesturesEnabled","Icon","componentData","routeParams","routes","index","tabBarVisible","headerTransparent","userDefinedTabBarOnPress","tabBarOnPress","console","warn","dispatch","popToTop","defaultHandler","originalRouteName","routeName","startsWith","substring","isStatelessComponent","Component","prototype","render","extendProps","store","transition","indexOf","charAt","Object","keys","createWrapper","wrapBy","wrapper","Wrapped","onRef","bind","ref","addRef","onEnter","deleteRef","onExit","propTypes","shape","isRequired","StatelessWrapped","filterParam","toString","proto","constructor","name","uniteParams","param","defaultSuccess","defaultFailure","NavigationStore","getStateForAction","reducer","_navigator","externalDispatch","externalState","prevState","externalAction","refs","states","isLogical","setCustomReducer","Navigator","router","cmd","onEnterHandler","currentScene","handler","success","failure","currentParams","error","message","onExitHandler","prevScene","exitHandler","Promise","then","e","onNavigationStateChange","currentState","action","activeState","setTimeout","FOCUS","onStateChange","setTopLevelNavigator","navigatorRef","create","scene","Array","isArray","processScene","createAction","args","inheritProps","clones","order","navigator","renderer","contentComponent","drawerWidth","drawerLockMode","tabBarPosition","lazy","duration","parentProps","tabs","modal","lightbox","overlay","drawer","transitionConfig","tabBarComponent","undefined","transitionSpec","timing","Animated","easing","Easing","step0","commonProps","pkey","includes","concat","push","child","clone","initialRouteName","initialRouteParams","path","on","wrap","initial","screen","wrapNavBar","replace","mode","navigationConfig","createTabNavigator","tabBarOptions","config","drawerOpenRoute","drawerCloseRoute","drawerToggleRoute","execute","actionType","overridenType","jump","NAVIGATE","drawerOpen","openDrawer","drawerClose","closeDrawer","drawerToggle","toggleDrawer","refresh","sceneKey","setParams","pop","timeout","popTo","popAndPush","POP_AND_PUSH","reset","parent","actions","navigate"],"sources":["E:/Upwork/React Native/AwesomeProject/node_modules/react-native-router-flux/src/Store.js"],"sourcesContent":["import React from 'react';\nimport { Image, Animated, Easing } from 'react-native';\nimport { createAppContainer, NavigationActions, StackActions } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerActions } from 'react-navigation-drawer';\nimport { createMaterialTopTabNavigator, createBottomTabNavigator } from 'react-navigation-tabs';\nimport PropTypes from 'prop-types';\nimport createReducer from './Reducer';\nimport * as ActionConst from './ActionConst';\nimport { OnEnter, OnExit, assert } from './Util';\nimport { LeftButton, RightButton, BackButton } from './NavBar';\nimport LightboxRenderer from './LightboxRenderer';\nimport _drawerImage from '../images/menu_burger.png';\nimport { getActiveState, getParent, getRouteNameByKey } from './State';\nimport Modal from './Modal';\nimport Lightbox from './Lightbox';\nimport Drawer from './Drawer';\nimport Tabs from './Tabs';\nimport Overlay from './Overlay';\nimport OverlayRenderer from './OverlayRenderer';\nimport createStackNavigatorHOC from './createStackNavigatorHOC';\nimport createTabNavigatorHOC from './createTabNavigatorHOC';\n\nlet RightNavBarButton;\nlet LeftNavBarButton;\nlet BackNavBarButton;\nlet counter = 0;\n\nexport const actionMap = {\n  [ActionConst.JUMP]: 'jump',\n  [ActionConst.PUSH]: 'push',\n  [ActionConst.REPLACE]: 'replace',\n  [ActionConst.BACK]: 'pop',\n  [ActionConst.BACK_ACTION]: 'pop',\n  [ActionConst.POP_TO]: 'popTo',\n  [ActionConst.REFRESH]: 'refresh',\n  [ActionConst.RESET]: 'reset',\n  [ActionConst.PUSH_OR_POP]: 'push',\n};\n\nconst reservedKeys = [\n  'addRef',\n  'back',\n  'children',\n  'create',\n  'dispatch',\n  'drawerClose',\n  'drawerOpen',\n  'execute',\n  'left',\n  'leftButton',\n  'navBar',\n  'navigate',\n  'on',\n  'onEnter',\n  'onExit',\n  'onLeft',\n  'onRight',\n  'pop',\n  'popTo',\n  'push',\n  'refresh',\n  'refs',\n  'removeRef',\n  'renderLeftButton',\n  'renderRightButton',\n  'renderTitle',\n  'replace',\n  'right',\n  'rightButton',\n  'run',\n  'setParams',\n  'title',\n];\n\nconst dontInheritKeys = [\n  'backToInitial',\n  'children',\n  'component',\n  'contentComponent',\n  'drawer',\n  'hideNavBar',\n  'hideTabBar',\n  'key',\n  'lightbox',\n  'modal',\n  'navigator',\n  'navTransparent',\n  'overlay',\n  'ref',\n  'style',\n  'tabBarComponent',\n  'tabs',\n  'title',\n  'type',\n];\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nfunction getProperties(component = {}) {\n  const res = {};\n  for (const key of reservedKeys) {\n    if (component[key]) {\n      res[key] = component[key];\n    }\n  }\n  delete res.children;\n  return res;\n}\nfunction createTabBarOptions({\n  tabBarStyle, activeTintColor, inactiveTintColor, activeBackgroundColor, inactiveBackgroundColor, showLabel, labelStyle, tabStyle, ...props\n}) {\n  return {\n    ...props,\n    style: tabBarStyle,\n    activeTintColor,\n    inactiveTintColor,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    showLabel,\n    labelStyle,\n    tabStyle,\n  };\n}\nfunction createNavigationOptions(params) {\n  const {\n    type,\n    cardStyle,\n    back,\n    backButtonImage,\n    backButtonTextStyle,\n    backTitle,\n    backTitleEnabled,\n    backToInitial,\n    component,\n    drawerIcon,\n    drawerImage,\n    drawerPosition,\n    getTitle,\n    headerLayoutPreset,\n    headerStyle,\n    headerTitleStyle,\n    hideDrawerButton,\n    hideNavBar,\n    hideTabBar,\n    icon,\n    init,\n    left,\n    leftButton,\n    leftButtonImage,\n    leftButtonTextStyle,\n    leftTitle,\n    navBar,\n    navBarButtonColor,\n    navigationBarStyle,\n    navigationBarTitleImage,\n    navigationBarTitleImageStyle,\n    navTransparent,\n    onLeft,\n    onRight,\n    panHandlers,\n    renderBackButton,\n    renderNavigationBar,\n    renderTitle,\n    right,\n    rightButton,\n    rightButtonImage,\n    rightButtonTextStyle,\n    rightTitle,\n    tabBarIcon,\n    tabBarLabel,\n    title,\n    titleStyle,\n    ...props\n  } = params;\n  const NavBar = renderNavigationBar || navBar;\n  if (component && component.navigationOptions) {\n    return component.navigationOptions;\n  }\n  return ({ navigation, screenProps }) => {\n    const navigationParams = navigation.state.params || {};\n    const state = {\n      navigation,\n      ...params,\n      ...navigationParams,\n      ...screenProps,\n    };\n    const res = {\n      animationEnabled: !(type === ActionConst.REPLACE || type === 'replace'  || type === ActionConst.RESET || type === 'reset'),\n      ...props,\n      cardStyle: navigationParams.cardStyle || cardStyle,\n      headerBackImage: navigationParams.backButtonImage || backButtonImage,\n      headerBackTitle: getValue(navigationParams.backTitle || backTitle, state),\n      headerBackTitleEnabled: navigationParams.backTitleEnabled || backTitleEnabled,\n      headerLayoutPreset: navigationParams.headerLayoutPreset || headerLayoutPreset,\n      headerLeft: () => getValue(navigationParams.left || left || leftButton || params.renderLeftButton, state),\n      headerRight: () => getValue(navigationParams.right || right || rightButton || params.renderRightButton, state),\n      headerStyle: getValue(navigationParams.headerStyle || headerStyle || navigationBarStyle, state),\n      headerTintColor: navBarButtonColor || props.tintColor || navigationParams.tintColor || navigationParams.headerTintColor,\n      headerTitle: getValue(navigationParams.renderTitle || renderTitle || params.renderTitle, state),\n      headerTitleStyle: headerTitleStyle || titleStyle,\n      title: getValue(navigationParams.title || title || getTitle, state),\n    };\n\n    const NavBarFromParams = navigationParams.renderNavigationBar || navigationParams.navBar;\n    if (NavBarFromParams != null) {\n      if (NavBarFromParams) {\n        res.header = data => <NavBarFromParams navigation={navigation} {...state} {...data} />;\n      }\n    } else if (NavBar) {\n      res.header = data => <NavBar navigation={navigation} {...state} {...data} />;\n    }\n\n    if (typeof navigationParams.panHandlers !== 'undefined') {\n      if (navigationParams.panHandlers === null) {\n        res.gesturesEnabled = false;\n      }\n    } else if (panHandlers === null) {\n      res.gesturesEnabled = false;\n    }\n\n    if (navigationBarTitleImage) {\n      res.headerTitle = <Image source={navigationBarTitleImage} style={navigationBarTitleImageStyle} />;\n    }\n\n    if (tabBarLabel) {\n      res.tabBarLabel = tabBarLabel;\n    }\n\n    if (tabBarIcon || icon) {\n      const Icon = tabBarIcon || icon;\n      res.tabBarIcon = data => <Icon {...state} {...data} />;\n    }\n    const componentData = {};\n    // copy all component static functions\n    if (component) {\n      for (const key of [\n        'onRight',\n        'onLeft',\n        'rightButton',\n        'leftButton',\n        'leftTitle',\n        'rightTitle',\n        'rightButtonImage',\n        'leftButtonImage',\n        'rightButtonTextStyle',\n        'leftButtonTextStyle',\n        'rightButtonIconStyle',\n        'leftButtonIconStyle',\n        'leftButtonTintColor',\n        'rightButtonTintColor',\n      ]) {\n        if (component[key]) {\n          componentData[key] = component[key];\n        }\n      }\n    }\n\n    if (\n      rightButtonImage\n      || rightTitle\n      || params.renderRightButton\n      || onRight\n      || navigationParams.onRight\n      || navigationParams.rightTitle\n      || navigationParams.rightButtonImage\n      || rightButtonTextStyle\n      || ((drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition === 'right')\n    ) {\n      res.headerRight = () => getValue(navigationParams.right || navigationParams.rightButton || params.renderRightButton, { ...navigationParams, ...screenProps }) || (\n        <RightNavBarButton navigation={navigation} {...params} {...navigationParams} {...componentData} />\n      );\n    }\n\n    if (\n      leftButtonImage\n      || backButtonImage\n      || backTitle\n      || leftTitle\n      || params.renderLeftButton\n      || leftButtonTextStyle\n      || renderBackButton\n      || backButtonTextStyle\n      || onLeft\n      || navigationParams.leftTitle\n      || navigationParams.onLeft\n      || navigationParams.leftButtonImage\n      || navigationParams.backButtonImage\n      || navigationParams.backTitle\n      || ((drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition !== 'right')\n    ) {\n      const leftButton = navigationParams.left || navigationParams.leftButton || params.renderLeftButton;\n      res.headerLeft = () => getValue(leftButton, { ...params, ...navigationParams, ...screenProps })\n        || (((onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage)) || drawerImage || drawerIcon) && (\n          <LeftNavBarButton navigation={navigation} {...params} {...navigationParams} {...componentData} />\n        ))\n        || res.headerLeft\n        || (init ? null : (!leftButton && renderBackButton && renderBackButton(state)) || (!leftButton && <BackNavBarButton navigation={navigation} {...state} />))\n        || null;\n    }\n\n    if (back) {\n      res.headerLeft = (renderBackButton && renderBackButton(state)) || (() => <BackNavBarButton navigation={navigation} {...state} />);\n    }\n\n    if (typeof navigationParams.left !== 'undefined' || typeof navigationParams.leftButton !== 'undefined' || typeof navigationParams.renderLeftButton !== 'undefined') {\n      if (navigationParams.left === null || navigationParams.leftButton === null || navigationParams.renderLeftButton === null) {\n        res.headerLeft = null;\n      }\n    }\n\n    // currect dynamic navigation params has priority over static scene params\n    // but taking them into account only if they are explicitly set (not null or undefined)\n    const routeParams = navigation.state.routes && navigation.state.routes[navigation.state.index].params;\n    if (navigationParams.hideTabBar != null) {\n      if (navigationParams.hideTabBar) {\n        res.tabBarVisible = false;\n      }\n    } else if (hideTabBar) {\n      res.tabBarVisible = false;\n    } else if (routeParams && routeParams.hideTabBar) {\n      res.tabBarVisible = false;\n    }\n\n    if (navigationParams.hideNavBar != null) {\n      if (navigationParams.hideNavBar) {\n        res.header = null;\n      }\n    } else if (hideNavBar) {\n      res.header = null;\n    }\n\n    if (navTransparent) {\n      res.headerTransparent = true;\n      res.headerStyle = {};\n    }\n\n    if (backToInitial) {\n      const userDefinedTabBarOnPress = res.tabBarOnPress;\n      res.tabBarOnPress = (data) => {\n        if (userDefinedTabBarOnPress) {\n          console.warn('backToInitial and tabBarOnPress were both defined and might cause unexpected navigation behaviors. I hope you know what you are doing ;-)');\n          userDefinedTabBarOnPress(data);\n        }\n        if (data.navigation && data.navigation.state.index !== 0) {\n          data.navigation.dispatch(StackActions.popToTop());\n        } else {\n          data.defaultHandler();\n        }\n      };\n    }\n    return res;\n  };\n}\nfunction originalRouteName(routeName) {\n  if (routeName.startsWith('_')) {\n    return routeName.substring(1);\n  }\n  return routeName;\n}\nfunction isStatelessComponent(Component) {\n  return !Component.prototype || typeof Component.prototype.render !== 'function';\n}\nfunction extendProps(props, store: NavigationStore) {\n  if (!props) {\n    return {};\n  }\n  const res = { ...props };\n  for (const transition of Object.keys(props)) {\n    if (\n      reservedKeys.indexOf(transition) === -1\n      && transition.startsWith('on')\n      && transition.charAt(2) >= 'A'\n      && transition.charAt(2) <= 'Z'\n      && typeof props[transition] === 'string'\n    ) {\n      if (store[props[transition]]) {\n        res[transition] = params => store[props[transition]](params);\n      }\n    }\n  }\n  return res;\n}\n// eslint no-param-reassign: \"error\"\nfunction createWrapper(Component, wrapBy, store: NavigationStore) {\n  if (!Component) {\n    return null;\n  }\n  const wrapper = wrapBy || (props => props);\n\n  // detect if the component is not functional stateless\n  // not sure if Component can be string-defined (\"div\") here\n  // may be there is a better way to detect stateless function component, but this should work\n  if (!isStatelessComponent(Component)) {\n    class Wrapped extends React.Component {\n      static propTypes = {\n        navigation: PropTypes.shape().isRequired,\n      };\n\n      constructor() {\n        super();\n        this.onRef = this.onRef.bind(this);\n      }\n\n      componentDidMount() {\n        const { navigation } = this.props;\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.addRef(originalRouteName(navigation.state.routeName), this.ref);\n        }\n        if (this.ref && this.ref.onEnter) {\n          this.ref.onEnter(navigation && navigation.state);\n        }\n      }\n\n      componentWillUnmount() {\n        const { navigation } = this.props;\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.deleteRef(originalRouteName(navigation.state.routeName));\n        }\n        if (this.ref && this.ref.onExit) {\n          this.ref.onExit(navigation && navigation.state);\n        }\n        this.ref = null;\n      }\n\n      onRef(ref) {\n        this.ref = ref;\n      }\n\n      render() {\n        const { navigation } = this.props;\n        if (!navigation || !navigation.state) {\n          return <Component ref={this.onRef} {...this.props} />;\n        }\n        return <Component ref={this.onRef} {...this.props} {...extendProps(navigation.state.params, store)} name={navigation.state.routeName} />;\n      }\n    }\n    return wrapper(Wrapped);\n  }\n\n  // if component is statless function, ref is not supported\n  function StatelessWrapped({ navigation, ...props }) {\n    return <Component {...props} navigation={navigation} {...extendProps(navigation.state.params, store)} name={navigation.state.routeName} />;\n  }\n  StatelessWrapped.propTypes = {\n    navigation: PropTypes.shape().isRequired,\n  };\n  return wrapper(StatelessWrapped);\n}\n\nfunction filterParam(data = {}) {\n  if (data.toString() !== '[object Object]') {\n    return { data };\n  }\n  const proto = (data || {}).constructor.name;\n  // avoid passing React Native parameters\n  if (!data || proto !== 'Object') {\n    return {};\n  }\n  return data;\n}\n\nfunction uniteParams(routeName, params) {\n  let res = {};\n  for (const param of params) {\n    if (param) {\n      res = { ...res, ...filterParam(param) };\n    }\n  }\n  res.routeName = routeName;\n  return res;\n}\n\nconst defaultSuccess = () => {};\nconst defaultFailure = () => {};\n\nexport default class NavigationStore {\n  getStateForAction = null;\n\n  reducer = null;\n\n  _navigator = null;\n\n  externalDispatch = null;\n\n  externalState = null;\n\n  prevState = null;\n\n  externalAction = {};\n\n  refs = {};\n\n  states = {};\n\n  isLogical = {};\n\n  currentScene;\n\n  prevScene;\n\n  currentParams;\n\n  onStateChange;\n\n  set externalState(state) {\n    if (state && this.externalDispatch) {\n      this.onNavigationStateChange(this.state, state, this.externalAction);\n      this.state = state;\n    }\n  }\n\n  setCustomReducer = (Navigator) => {\n    this.getStateForAction = Navigator.router.getStateForAction;\n    const reducer = createReducer(this);\n    Navigator.router.getStateForAction = (cmd, state) => (this.reducer ? this.reducer(state, cmd) : reducer(state, cmd));\n  };\n\n  onEnterHandler = async (currentScene) => {\n    if (this.states[currentScene]) {\n      const handler = this[currentScene + OnEnter];\n      const success = this.states[currentScene].success || defaultSuccess;\n      const failure = this.states[currentScene].failure || defaultFailure;\n      if (handler) {\n        try {\n          const res = await handler(this.currentParams, this.state);\n          if (res) {\n            success(res);\n          } else {\n            failure();\n          }\n        } catch (e) {\n          failure({ error: e.message });\n        }\n      }\n    }\n  };\n\n  onExitHandler = (prevScene) => {\n    if (prevScene) {\n      const exitHandler = this[prevScene + OnExit];\n      if (exitHandler) {\n        try {\n          const res = exitHandler(this.state);\n          if (res instanceof Promise) {\n            res.then(defaultSuccess, defaultFailure);\n          }\n        } catch (e) {\n          console.error('Error during onExit handler:', e);\n        }\n      }\n    }\n  };\n\n  onNavigationStateChange = async (prevState, currentState, action) => {\n    this.state = currentState;\n    this.prevState = prevState;\n    const activeState = getActiveState(this.state);\n    const currentScene = activeState.routeName;\n    this.currentParams = { ...activeState.params, ...action.params };\n    this.currentScene = currentScene;\n    this.prevScene = this.prevState ? getActiveState(this.prevState).routeName : null;\n    if (this.currentScene !== this.prevScene) {\n      // run onExit for old scene\n      this.onExitHandler(this.prevScene);\n      setTimeout(() => this.dispatch({\n        type: ActionConst.FOCUS,\n        routeName: this.currentScene,\n        params: this.currentParams,\n      }));\n      this.onEnterHandler(currentScene);\n    } else {\n      const routeName = getRouteNameByKey(this.state, action.key);\n      if (action.type === 'Navigation/DRAWER_OPENED') {\n        this.onEnterHandler(routeName);\n      } else if (action.type === 'Navigation/DRAWER_CLOSED') {\n        this.onExitHandler(routeName);\n      }\n    }\n    if (this.onStateChange) {\n      this.onStateChange(prevState, currentState, action);\n    }\n  };\n\n  setTopLevelNavigator = (navigatorRef) => {\n    this._navigator = navigatorRef;\n  };\n\n  addRef = (name, ref) => {\n    this.refs[name] = ref;\n  };\n\n  deleteRef = (name) => {\n    delete this.refs[name];\n  };\n\n  create = (scene: Scene, params = {}, wrapBy = props => props) => {\n    assert(!Array.isArray(scene), 'Router should contain only one scene, please wrap your scenes with root Scene ');\n    RightNavBarButton = wrapBy(RightButton);\n    LeftNavBarButton = wrapBy(LeftButton);\n    BackNavBarButton = wrapBy(BackButton);\n    const Navigator = this.processScene(scene, params, [], wrapBy);\n    // set initial state\n    this.onNavigationStateChange(null, Navigator.router.getStateForAction(NavigationActions.init()), NavigationActions.init());\n    this.setCustomReducer(Navigator);\n\n    return createAppContainer(Navigator);\n  };\n\n  createAction = name => (args) => {\n    // console.log(`Transition to state=${name}`);\n    if (this.isLogical[name]) {\n      this[name](args);\n    } else {\n      setTimeout(() => this[name](args));\n    }\n  };\n\n  processScene = (scene: Scene, inheritProps = {}, clones = [], wrapBy) => {\n    assert(scene.props, 'props should be defined');\n    if (!scene.props.children) {\n      return null;\n    }\n    const res = {};\n    const order = [];\n    const {\n      navigator, renderer, contentComponent, drawerWidth, drawerLockMode, tabBarPosition, lazy, duration, ...parentProps\n    } = scene.props;\n    let {\n      tabs, modal, lightbox, overlay, drawer, transitionConfig, tabBarComponent,\n    } = parentProps;\n    if (scene.type === Modal) {\n      modal = true;\n    } else if (scene.type === Drawer) {\n      drawer = true;\n    } else if (scene.type === Lightbox) {\n      lightbox = true;\n    } else if (scene.type === Tabs) {\n      tabs = true;\n    } else if (scene.type === Overlay) {\n      overlay = true;\n    }\n\n    if (duration !== undefined && !transitionConfig) {\n      transitionConfig = () => ({\n        transitionSpec: {\n          duration,\n          timing: Animated.timing,\n          easing: Easing.step0,\n        },\n      });\n    }\n\n    const commonProps = { ...inheritProps, ...parentProps };\n    delete commonProps.children;\n    delete commonProps.component;\n    // add inherit props\n    for (const pkey of Object.keys(commonProps)) {\n      if (dontInheritKeys.includes(pkey) && (pkey === 'type' || pkey === 'hideNavBar' || !parentProps[pkey])) {\n        delete commonProps[pkey];\n      }\n    }\n\n    if (drawer) {\n      commonProps.drawerImage = commonProps.drawerImage || _drawerImage;\n    }\n\n    const children = !Array.isArray(parentProps.children) ? [parentProps.children] : [].concat(...parentProps.children);\n    // add clone scenes\n    if (!drawer && !tabs && !overlay) {\n      children.push(...clones);\n    }\n    // add all clones\n    for (const child of children) {\n      if (child && child.props.clone) {\n        if (clones.indexOf(child) === -1) {\n          clones.push(child);\n        }\n      }\n    }\n    let initialRouteName;\n    let initialRouteParams;\n    for (const child of children) {\n      // allow null/false child, useful for conditionals\n      if (!child) {\n        continue;\n      }\n      const key = child.key || `key${(counter += 1)}`;\n      const init = key === children[0].key;\n      assert(reservedKeys.indexOf(key) === -1, `Scene name cannot be reserved word: ${child.key}`);\n      const {\n        component, type = tabs || drawer ? 'jump' : 'push', path, onEnter, onExit, on, failure, success, wrap, initial = false, ...props\n      } = child.props;\n      if (!this.states[key]) {\n        this.states[key] = {};\n      }\n      for (const transition of Object.keys(props)) {\n        if (reservedKeys.indexOf(transition) === -1 && props[transition] instanceof Function) {\n          this.states[key][transition] = props[transition];\n        }\n      }\n      delete props.children;\n      if (success) {\n        this.states[key].success = success instanceof Function ? success : this.createAction(success);\n      }\n      if (failure) {\n        this.states[key].failure = failure instanceof Function ? failure : this.createAction(failure);\n      }\n      if (path) {\n        this.states[key].path = path;\n      }\n      // console.log(`KEY ${key} LEGACY {legacy} PATH ${path} DRAWER ${drawer} TABS ${tabs} WRAP ${wrap}`, JSON.stringify(commonProps));\n      const screen = {\n        screen: createWrapper(component, wrapBy, this) || this.processScene(child, commonProps, clones) || (lightbox && (() => null)),\n        navigationOptions: createNavigationOptions({\n          ...commonProps,\n          hideNavBar: parentProps.hideNavBar,\n          ...getProperties(component),\n          ...child.props,\n          init,\n          component,\n        }),\n      };\n\n      // wrap component inside own navbar for tabs/drawer parent controllers\n      // don't wrap child scenes for custom navigators/renderers\n      let wrapNavBar = drawer || (tabs && !navigator && !renderer) || wrap;\n      if (wrap === false || commonProps.wrap === false) {\n        wrapNavBar = false;\n      }\n      if (component && wrapNavBar) {\n        res[key] = {\n          screen: this.processScene(\n            {\n              key,\n              props: {\n                children: {\n                  key: `_${key}`,\n                  props: { ...child.props, wrap: false },\n                },\n              },\n            },\n            commonProps,\n            clones,\n            wrapBy,\n          ),\n          navigationOptions: createNavigationOptions({\n            ...commonProps,\n            ...child.props,\n            hideNavBar: true,\n          }),\n        };\n      } else {\n        res[key] = screen;\n      }\n\n      // a bit of magic, create all 'actions'-shortcuts inside navigationStore\n      props.init = true;\n      if (!this[key]) {\n        this.isLogical[key] = !!component;\n        this[key] = new Function(\n          'actions',\n          'props',\n          'type',\n          `return function ${\n            key.replace(/\\W/g, '_') // eslint-disable-line no-new-func\n          }(params){ actions.execute(type, '${key}', props, params)}`,\n        )(this, { error: '', ...commonProps, ...props }, type);\n      }\n\n      if ((onEnter || on || (component && component.onEnter)) && !this[key + OnEnter]) {\n        this[key + OnEnter] = onEnter || on || component.onEnter;\n      }\n\n      if ((onExit || (component && component.onExit)) && !this[key + OnExit]) {\n        this[key + OnExit] = onExit || component.onExit;\n      }\n\n      order.push(key);\n      if (initial || child.props.initial || !initialRouteName) {\n        initialRouteName = key;\n        initialRouteParams = { ...commonProps, ...props };\n      }\n    }\n    const mode = modal ? 'modal' : 'card';\n    const navigationConfig = {\n      lazy,\n      initialRouteName,\n      initialRouteParams,\n      contentComponent,\n      order,\n      ...commonProps,\n      navigationOptions: createNavigationOptions(commonProps),\n    };\n    if (navigator) {\n      return navigator(res, navigationConfig);\n    }\n    if (renderer) {\n      return tabs ? createTabNavigatorHOC(renderer)(res, navigationConfig) : createStackNavigatorHOC(renderer)(res, navigationConfig);\n    }\n    if (lightbox) {\n      return createStackNavigatorHOC(LightboxRenderer)(res, {\n        mode,\n        initialRouteParams,\n        initialRouteName,\n        ...commonProps,\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n\n    if (tabs) {\n      let createTabNavigator = createMaterialTopTabNavigator;\n      if (tabBarPosition !== 'top') {\n        createTabNavigator = createBottomTabNavigator;\n      }\n\n      return createTabNavigator(res, {\n        lazy,\n        tabBarComponent,\n        initialRouteName,\n        initialRouteParams,\n        tabBarPosition,\n        order,\n        ...commonProps,\n        tabBarOptions: createTabBarOptions(commonProps),\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n\n    if (drawer) {\n      const config = {\n        initialRouteName,\n        contentComponent,\n        order,\n        drawerOpenRoute: 'DrawerOpen',\n        drawerCloseRoute: 'DrawerClose',\n        drawerToggleRoute: 'DrawerToggle',\n        ...commonProps,\n      };\n      if (drawerWidth) {\n        config.drawerWidth = drawerWidth;\n      }\n      if (drawerLockMode) {\n        config.drawerLockMode = drawerLockMode;\n      }\n      return createDrawerNavigator(res, config);\n    }\n\n    if (overlay) {\n      return createTabNavigatorHOC(OverlayRenderer)(res, {\n        lazy,\n        initialRouteName,\n        contentComponent,\n        initialRouteParams,\n        order,\n        ...commonProps,\n        tabBarOptions: createTabBarOptions(commonProps),\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n    return createStackNavigator(res, {\n      mode,\n      initialRouteParams,\n      initialRouteName,\n      ...commonProps,\n      transitionConfig,\n      navigationOptions: createNavigationOptions(commonProps),\n    });\n  };\n\n  dispatch = (action) => {\n    if (this.externalDispatch) {\n      this.externalAction = action;\n      this.externalDispatch(action);\n    } else if (this._navigator) {\n      this._navigator.dispatch(action);\n    }\n  };\n\n  execute = (actionType, routeName, ...params) => {\n    const res = uniteParams(routeName, params);\n    const overridenType = res.type || actionType;\n    const type = actionMap[overridenType] || overridenType;\n    if (type === 'pop') {\n      this[type](res);\n    } else {\n      this[type](routeName, res);\n    }\n  };\n\n  push = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: StackActions.PUSH, routeName, params });\n  };\n\n  jump = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: NavigationActions.NAVIGATE, routeName, params });\n  };\n\n  drawerOpen = () => {\n    this.dispatch(DrawerActions.openDrawer());\n  };\n\n  drawerClose = () => {\n    this.dispatch(DrawerActions.closeDrawer());\n  };\n\n  drawerToggle = () => {\n    this.dispatch(DrawerActions.toggleDrawer());\n  };\n\n  refresh = (data, sceneKey = null) => {\n    const params = filterParam(data);\n    const { key } = getActiveState(this.state);\n    this.dispatch(\n      NavigationActions.setParams({\n        key: sceneKey || key,\n        params,\n      }),\n    );\n  };\n\n  pop = ({ timeout, key, ...params } = {}) => {\n    const res = filterParam(params);\n    if (timeout) {\n      setTimeout(() => this.pop(params), timeout);\n    } else {\n      this.dispatch(NavigationActions.back({ key }));\n      if (res.refresh) {\n        this.refresh(res.refresh);\n      }\n    }\n    return true;\n  };\n\n  popTo = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.POP_TO, routeName, params });\n  };\n\n  popAndPush = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.POP_AND_PUSH, routeName, params });\n  };\n\n  replace = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.REPLACE, routeName, params });\n  };\n\n  reset = (routeName, data) => {\n    const params = filterParam(data);\n    const parent = getParent(this.state, routeName);\n    this.dispatch(\n      StackActions.reset({\n        index: 0,\n        key: parent ? parent.key : null,\n        actions: [\n          NavigationActions.navigate({\n            routeName,\n            params,\n          }),\n        ],\n      }),\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}