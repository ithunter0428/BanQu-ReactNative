{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function PostContent(_ref) {\n  var navigation = _ref.navigation,\n      fadeOut = _ref.fadeOut;\n  var route = useRoute();\n\n  var _useState = useState(new Animated.Value(-21)),\n      _useState2 = _slicedToArray(_useState, 2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  useEffect(function () {\n    Animated.timing(offset, {\n      toValue: 0,\n      duration: 1500\n    }).start();\n  });\n  return _jsx(View, {\n    style: {\n      padding: 21\n    },\n    children: _jsx(Animated.View, {\n      style: {\n        transform: [{\n          translateY: offset\n        }, {\n          translateX: offset\n        }]\n      },\n      children: _jsx(View, {\n        style: {\n          background: 'linear-gradient(111.39deg, #FF9457 -7.95%, #E96114 64.07%)',\n          paddingRight: 21,\n          paddingLeft: 21,\n          paddingTop: 56,\n          paddingBottom: 56,\n          marginBottom: 27,\n          borderRadius: 12,\n          border: 'border: 1px solid rgba(255, 255, 255, 0.19)',\n          fontWeight: 600,\n          fontSize: 22,\n          lineHeight: 30,\n          color: '#FFFFFF',\n          textAlign: 'center'\n        },\n        children: _jsx(Text, {\n          children: route.params.content\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useEffect","useRoute","PostContent","navigation","fadeOut","route","Animated","Value","offset","setOffset","timing","toValue","duration","start","padding","transform","translateY","translateX","background","paddingRight","paddingLeft","paddingTop","paddingBottom","marginBottom","borderRadius","border","fontWeight","fontSize","lineHeight","color","textAlign","params","content","styles","StyleSheet","create"],"sources":["E:/Upwork/React Native/AwesomeProject/src/Components/PostContent/postContent.tsx"],"sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Animated, Image, Text} from 'react-native'\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\nexport default function PostContent({navigation, fadeOut}) {\r\n\r\n    const route = useRoute();\r\n    const [offset, setOffset] = useState(new Animated.Value(-21))\r\n\r\n    useEffect(() => {\r\n        Animated.timing(offset, { toValue: 0, duration: 1500 }).start();\r\n    })\r\n\r\n    return (\r\n\r\n        <View style={{\r\n            padding: 21,\r\n        }}>\r\n            <Animated.View\r\n                style={{\r\n                    transform: [\r\n                        { translateY: offset },\r\n                        { translateX: offset }\r\n                    ]\r\n            }}>\r\n                <View style={{\r\n                background: 'linear-gradient(111.39deg, #FF9457 -7.95%, #E96114 64.07%)',\r\n                paddingRight: 21,\r\n                paddingLeft: 21,\r\n                paddingTop: 56,\r\n                paddingBottom: 56,\r\n                marginBottom: 27,\r\n                borderRadius: 12,\r\n                border: 'border: 1px solid rgba(255, 255, 255, 0.19)',\r\n                fontWeight: 600,\r\n                fontSize: 22,\r\n                lineHeight: 30,\r\n                color: '#FFFFFF',\r\n                textAlign: 'center',\r\n                }}>\r\n                    <Text>\r\n                        {route.params.content}\r\n                    </Text>\r\n                </View>\r\n            </Animated.View>    \r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;AAEA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,eAAe,SAASC,WAAT,OAA4C;EAAA,IAAtBC,UAAsB,QAAtBA,UAAsB;EAAA,IAAVC,OAAU,QAAVA,OAAU;EAEvD,IAAMC,KAAK,GAAGJ,QAAQ,EAAtB;;EACA,gBAA4BF,QAAQ,CAAC,IAAIO,QAAQ,CAACC,KAAb,CAAmB,CAAC,EAApB,CAAD,CAApC;EAAA;EAAA,IAAOC,MAAP;EAAA,IAAeC,SAAf;;EAEAT,SAAS,CAAC,YAAM;IACZM,QAAQ,CAACI,MAAT,CAAgBF,MAAhB,EAAwB;MAAEG,OAAO,EAAE,CAAX;MAAcC,QAAQ,EAAE;IAAxB,CAAxB,EAAwDC,KAAxD;EACH,CAFQ,CAAT;EAIA,OAEI,KAAC,IAAD;IAAM,KAAK,EAAE;MACTC,OAAO,EAAE;IADA,CAAb;IAAA,UAGI,KAAC,QAAD,CAAU,IAAV;MACI,KAAK,EAAE;QACHC,SAAS,EAAE,CACP;UAAEC,UAAU,EAAER;QAAd,CADO,EAEP;UAAES,UAAU,EAAET;QAAd,CAFO;MADR,CADX;MAAA,UAOI,KAAC,IAAD;QAAM,KAAK,EAAE;UACbU,UAAU,EAAE,4DADC;UAEbC,YAAY,EAAE,EAFD;UAGbC,WAAW,EAAE,EAHA;UAIbC,UAAU,EAAE,EAJC;UAKbC,aAAa,EAAE,EALF;UAMbC,YAAY,EAAE,EAND;UAObC,YAAY,EAAE,EAPD;UAQbC,MAAM,EAAE,6CARK;UASbC,UAAU,EAAE,GATC;UAUbC,QAAQ,EAAE,EAVG;UAWbC,UAAU,EAAE,EAXC;UAYbC,KAAK,EAAE,SAZM;UAabC,SAAS,EAAE;QAbE,CAAb;QAAA,UAeI,KAAC,IAAD;UAAA,UACKzB,KAAK,CAAC0B,MAAN,CAAaC;QADlB;MAfJ;IAPJ;EAHJ,EAFJ;AAkCH;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}