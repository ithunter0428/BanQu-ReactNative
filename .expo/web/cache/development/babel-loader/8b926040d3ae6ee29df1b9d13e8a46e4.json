{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function (_ref) {\n  var navigationConfig = _ref.navigationConfig,\n      descriptors = _ref.descriptors;\n  var initialRouteName = navigationConfig.initialRouteName,\n      order = navigationConfig.order,\n      contentComponent = navigationConfig.contentComponent;\n  var ContentComponent = contentComponent || View;\n  var descriptor = descriptors[initialRouteName];\n  var Component = descriptor.getComponent();\n  var overlays = [];\n\n  for (var i = 0; i < order.length; i += 1) {\n    var routeName = order[i];\n\n    if (initialRouteName !== routeName) {\n      var Overlay = descriptors[routeName].getComponent();\n      overlays.push(_jsx(Overlay, {\n        navigation: descriptors[routeName].navigation\n      }, routeName));\n    }\n  }\n\n  return _jsxs(ContentComponent, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Component, {\n      navigation: descriptor.navigation\n    }), overlays]\n  });\n});","map":{"version":3,"names":["React","navigationConfig","descriptors","initialRouteName","order","contentComponent","ContentComponent","View","descriptor","Component","getComponent","overlays","i","length","routeName","Overlay","push","navigation","flex"],"sources":["E:/Upwork/React Native/AwesomeProject/node_modules/react-native-router-flux/src/OverlayRenderer.js"],"sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport { View } from 'react-native';\n\nexport default ({ navigationConfig, descriptors }) => {\n  const { initialRouteName, order, contentComponent } = navigationConfig;\n  const ContentComponent = contentComponent || View;\n  const descriptor = descriptors[initialRouteName];\n  const Component = descriptor.getComponent();\n\n  const overlays = [];\n  for (let i = 0; i < order.length; i += 1) {\n    const routeName = order[i];\n    if (initialRouteName !== routeName) {\n      const Overlay = descriptors[routeName].getComponent();\n      overlays.push(<Overlay key={routeName} navigation={descriptors[routeName].navigation} />);\n    }\n  }\n  return (\n    <ContentComponent style={{ flex: 1 }}>\n      <Component navigation={descriptor.navigation} />\n      {overlays}\n    </ContentComponent>\n  );\n};\n"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,gBAAe,gBAAuC;EAAA,IAApCC,gBAAoC,QAApCA,gBAAoC;EAAA,IAAlBC,WAAkB,QAAlBA,WAAkB;EACpD,IAAQC,gBAAR,GAAsDF,gBAAtD,CAAQE,gBAAR;EAAA,IAA0BC,KAA1B,GAAsDH,gBAAtD,CAA0BG,KAA1B;EAAA,IAAiCC,gBAAjC,GAAsDJ,gBAAtD,CAAiCI,gBAAjC;EACA,IAAMC,gBAAgB,GAAGD,gBAAgB,IAAIE,IAA7C;EACA,IAAMC,UAAU,GAAGN,WAAW,CAACC,gBAAD,CAA9B;EACA,IAAMM,SAAS,GAAGD,UAAU,CAACE,YAAX,EAAlB;EAEA,IAAMC,QAAQ,GAAG,EAAjB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACS,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;IACxC,IAAME,SAAS,GAAGV,KAAK,CAACQ,CAAD,CAAvB;;IACA,IAAIT,gBAAgB,KAAKW,SAAzB,EAAoC;MAClC,IAAMC,OAAO,GAAGb,WAAW,CAACY,SAAD,CAAX,CAAuBJ,YAAvB,EAAhB;MACAC,QAAQ,CAACK,IAAT,CAAc,KAAC,OAAD;QAAyB,UAAU,EAAEd,WAAW,CAACY,SAAD,CAAX,CAAuBG;MAA5D,GAAcH,SAAd,CAAd;IACD;EACF;;EACD,OACE,MAAC,gBAAD;IAAkB,KAAK,EAAE;MAAEI,IAAI,EAAE;IAAR,CAAzB;IAAA,WACE,KAAC,SAAD;MAAW,UAAU,EAAEV,UAAU,CAACS;IAAlC,EADF,EAEGN,QAFH;EAAA,EADF;AAMD,CApBD"},"metadata":{},"sourceType":"module"}