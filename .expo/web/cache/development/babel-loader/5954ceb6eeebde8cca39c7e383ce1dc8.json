{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport { useFonts } from 'expo-font';\nimport { BASE_URL } from \"../../Constant\";\nimport { useRoute } from '@react-navigation/native';\nimport { Feather } from '@expo/vector-icons';\nimport Profile from \"./profile\";\nimport Search from \"./search\";\nimport Tag from \"../../Components/TagList/tagList\";\nimport PostList from \"./postList\";\nimport BroadcastTransition from \"../BroadcastTransition\";\nimport { MockPosts } from \"../../Constant\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MainPageTransition = function MainPageTransition(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    IBMPlex: require(\"../../../assets/fonts/IBMPlexSans-Text.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var _useState = useState(MockPosts),\n      _useState2 = _slicedToArray(_useState, 2),\n      postList = _useState2[0],\n      setPostListData = _useState2[1];\n\n  var _useState3 = useState(postList),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredPostList = _useState4[0],\n      setFilterPostList = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      keyword = _useState6[0],\n      setKeyword = _useState6[1];\n\n  var _useState7 = useState('all'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tag = _useState8[0],\n      setTag = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      animflag = _useState10[0],\n      setAnimFlag = _useState10[1];\n\n  var _useState11 = useState(new Animated.Value(1)),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fadeAnimation = _useState12[0],\n      setFadeAnimation = _useState12[1];\n\n  var _useState13 = useState(new Animated.Value(250)),\n      _useState14 = _slicedToArray(_useState13, 2),\n      offset = _useState14[0],\n      setOffset = _useState14[1];\n\n  var route = useRoute();\n\n  var getPostList = function _callee() {\n    var _await$axios$get, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL + '/getAllPost'));\n\n          case 2:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n            setPostListData(data);\n            setFilterPostList(data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (animflag == true) {\n      Animated.timing(offset, {\n        toValue: 0,\n        duration: 2000\n      }).start();\n    } else {\n      fadeOut();\n    }\n  }, [animflag]);\n\n  var onChangeKeyword = function onChangeKeyword(key) {\n    setKeyword(key);\n    onFileterPostList(key, tag);\n  };\n\n  var onChangeTag = function onChangeTag(tagParam) {\n    setTag(tagParam);\n    onFileterPostList(keyword, tagParam);\n  };\n\n  var onFileterPostList = function onFileterPostList(key, tagParam) {\n    setFilterPostList(postList.filter(function (msg) {\n      var flag = tagParam == 'all' ? true : msg.tag == tagParam;\n      return (msg.sender_name.includes(key) || msg.content.includes(key)) && flag;\n    }));\n  };\n\n  var fadeOut = function fadeOut() {\n    Animated.timing(fadeAnimation, {\n      toValue: 0,\n      duration: 2500\n    }).start(function () {\n      return setAnimFlag(true);\n    });\n  };\n\n  useEffect(function () {}, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [route.params && route.params.transition && animflag == false ? _jsx(Animated.View, {\n      style: [{\n        opacity: fadeAnimation\n      }, styles.backComponent],\n      children: _jsx(BroadcastTransition, {})\n    }) : _jsx(_Fragment, {}), _jsxs(ScrollView, {\n      style: styles.scrollView,\n      children: [_jsx(Profile, {}), _jsx(Search, {\n        onChangeKeyword: onChangeKeyword\n      }), _jsx(Tag, {\n        onChangeTag: onChangeTag,\n        onlyInterested: true,\n        onlyAnimated: true\n      }), _jsx(PostList, {\n        messages: filteredPostList,\n        onlyAnimation: animflag\n      })]\n    }), _jsx(Animated.View, {\n      style: {\n        transform: [{\n          translateY: offset\n        }]\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('editor');\n        },\n        style: styles.footer,\n        children: _jsx(Text, {\n          style: styles.button,\n          children: _jsx(Feather, {\n            name: \"plus\",\n            size: 20,\n            color: \"white\"\n          })\n        })\n      })\n    })]\n  });\n};\n\nvar styles = {\n  button: {\n    width: 64,\n    height: 64,\n    zIndex: -1,\n    borderRadius: 32,\n    backgroundColor: '#FF7C24',\n    color: '#FFFFFF',\n    float: 'right',\n    textAlign: 'center',\n    alignSelf: 'center',\n    alignItems: 'center',\n    fontSize: 32\n  },\n  scrollView: {\n    backgroundColor: '#0D0C13',\n    padding: 21,\n    fontFamily: 'IBMPlex'\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 30,\n    alignSelf: 'center'\n  },\n  backComponent: {\n    zIndex: 9999,\n    flex: 1,\n    position: 'absolute',\n    width: '100%'\n  }\n};\nexport default MainPageTransition;","map":{"version":3,"names":["React","useEffect","useState","axios","useFonts","BASE_URL","useRoute","Feather","Profile","Search","Tag","PostList","BroadcastTransition","MockPosts","MainPageTransition","navigation","IBMPlex","require","loaded","postList","setPostListData","filteredPostList","setFilterPostList","keyword","setKeyword","tag","setTag","animflag","setAnimFlag","Animated","Value","fadeAnimation","setFadeAnimation","offset","setOffset","route","getPostList","get","data","timing","toValue","duration","start","fadeOut","onChangeKeyword","key","onFileterPostList","onChangeTag","tagParam","filter","msg","flag","sender_name","includes","content","flex","params","transition","opacity","styles","backComponent","scrollView","transform","translateY","navigate","footer","button","width","height","zIndex","borderRadius","backgroundColor","color","float","textAlign","alignSelf","alignItems","fontSize","padding","fontFamily","position","bottom"],"sources":["E:/jsc/AwesomeProject/src/Pages/MainPageTransition/index.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport { View, ScrollView, StyleSheet, Animated, Image, Text, TouchableOpacity } from 'react-native'\r\nimport axios from 'axios';\r\nimport { useFonts } from 'expo-font';\r\nimport { BASE_URL } from '../../Constant'\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { Feather, Entypo } from '@expo/vector-icons';\r\nimport Profile from \"./profile\";\r\nimport Search from \"./search\";\r\nimport Tag from '../../Components/TagList/tagList';\r\nimport PostList from \"./postList\";\r\nimport PostForm from '../Post/PostForm';\r\nimport BroadcastForm from '../Broadcast/BroadcastForm';\r\nimport Broadcast from '../Broadcast';\r\nimport BroadcastTransition from '../BroadcastTransition'\r\nimport { MockPosts } from '../../Constant';\r\n\r\n// MainPage Component\r\nconst MainPageTransition: FunctionComponent = ({ navigation }) => {\r\n    // Load Font\r\n    const [loaded] = useFonts({\r\n        IBMPlex: require('../../../assets/fonts/IBMPlexSans-Text.ttf'),\r\n    });\r\n\r\n    const [postList, setPostListData] = useState(MockPosts);\r\n    const [filteredPostList, setFilterPostList] = useState(postList);\r\n    const [keyword, setKeyword] = useState('');\r\n    const [tag, setTag] = useState('all');\r\n    const [animflag, setAnimFlag] = useState(false)\r\n    const [fadeAnimation, setFadeAnimation] = useState(new Animated.Value(1));\r\n    const [offset, setOffset] = useState(new Animated.Value(250)) // Animation\r\n    const route = useRoute();\r\n    \r\n    // Get Post Data through API\r\n    const getPostList = async() => {\r\n        const { data } = await axios.get(BASE_URL + '/getAllPost')\r\n        setPostListData(data)\r\n        setFilterPostList(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (animflag == true) {\r\n            Animated.timing(offset, { toValue: 0, duration: 2000 }).start();\r\n        }\r\n        else {\r\n            fadeOut();\r\n        }\r\n        // getPostList()\r\n    }, [animflag])\r\n\r\n    // When user inputs Search keyword\r\n    const onChangeKeyword = (key) => {\r\n        setKeyword(key)\r\n        onFileterPostList(key, tag)\r\n    }\r\n\r\n    // When user selects tag\r\n    const onChangeTag = (tagParam) => {\r\n        setTag(tagParam)\r\n        onFileterPostList(keyword, tagParam)\r\n    }\r\n\r\n    // To filter post messages\r\n    const onFileterPostList = (key, tagParam) => {\r\n        setFilterPostList(\r\n            postList.filter(msg => {\r\n                const flag = tagParam == 'all' ? true : msg.tag == tagParam\r\n                return (msg.sender_name.includes(key) || msg.content.includes(key)) && flag;\r\n            })\r\n        )\r\n    }\r\n\r\n    //  Fadeout BroadCast Component\r\n    const fadeOut = () => {\r\n        Animated.timing(fadeAnimation, {\r\n          toValue: 0,\r\n          duration: 2500\r\n        }).start(() => setAnimFlag(true));\r\n      };\r\n\r\n      useEffect(() => {  }, []);\r\n    \r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            {route.params && route.params.transition && animflag == false? <Animated.View style={[{opacity: fadeAnimation }, styles.backComponent]}><BroadcastTransition /></Animated.View> : <></>}\r\n            <ScrollView style={styles.scrollView}>\r\n                <Profile/>\r\n                <Search onChangeKeyword={onChangeKeyword} />\r\n                <Tag onChangeTag={onChangeTag} onlyInterested={true} onlyAnimated={true} />\r\n                <PostList messages={filteredPostList} onlyAnimation={animflag} />\r\n            </ScrollView>\r\n            \r\n            <Animated.View style={{ transform: [{translateY: offset}] }}>\r\n                <TouchableOpacity onPress={() => { navigation.navigate('editor') }} style={styles.footer}>\r\n                    <Text style={styles.button}>\r\n                        <Feather\r\n                            name=\"plus\"\r\n                            size={20}\r\n                            color=\"white\"\r\n                        />\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </Animated.View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        width: 64,\r\n        height: 64,\r\n        zIndex: -1,\r\n        borderRadius: 32,\r\n        backgroundColor: '#FF7C24',\r\n        color: '#FFFFFF',\r\n        float: 'right',\r\n        textAlign: 'center',\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 32,\r\n    },\r\n    scrollView: {\r\n        backgroundColor: '#0D0C13', \r\n        padding: 21, \r\n        fontFamily: 'IBMPlex'\r\n    },\r\n\r\n    footer: {\r\n        position: 'absolute',\r\n        bottom: 30,\r\n        alignSelf: 'center'\r\n    },\r\n    backComponent: {\r\n        zIndex: 9999,\r\n        flex: 1,\r\n        position:'absolute',\r\n        width:'100%'\r\n    }\r\n}\r\n\r\nexport default MainPageTransition;"],"mappings":"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"},"metadata":{},"sourceType":"module"}