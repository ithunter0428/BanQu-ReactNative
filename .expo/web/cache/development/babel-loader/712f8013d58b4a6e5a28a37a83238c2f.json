{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PostList(_ref) {\n  var _this = this;\n\n  var messages = _ref.messages;\n  useEffect(function () {\n    Animated.timing();\n  });\n\n  var _useState = useState([\"linear-gradient(111.39deg, #FF9457 -7.95%, #E96114 64.07%)\", \"linear-gradient(111.39deg, #FF8AEC -7.95%, #B114E9 64.07%)\", \"linear-gradient(111.39deg, #CAC5C9 -7.95%, #918D90 64.07%)\", \"linear-gradient(111.39deg, #8CB5F2 -7.95%, #2A8DE8 64.07%)\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      backColorList = _useState2[0],\n      setBackColorList = _useState2[1];\n\n  var postList = function postList() {\n    return messages.map(function (message, index) {\n      return _jsx(Animated.View, {\n        style: {\n          transform: [{\n            translateX: _this.state.offsetX\n          }]\n        },\n        children: _jsxs(View, {\n          style: {\n            background: backColorList[index % 4],\n            borderRadius: 12,\n            padding: 20,\n            paddingTop: 0,\n            marginBottom: 14,\n            color: '#FFFFFF'\n          },\n          children: [_jsxs(View, {\n            style: styles.footer,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'flex-start'\n              },\n              children: [_jsx(Image, {\n                style: styles.photo,\n                source: {\n                  uri: message.profile_img\n                }\n              }), _jsx(Text, {\n                style: styles.username,\n                children: message.sender_name\n              })]\n            }), _jsx(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'flex-end'\n              },\n              children: _jsx(Text, {\n                style: styles.category,\n                children: message.tag\n              })\n            })]\n          }), _jsx(View, {\n            style: styles.footer,\n            children: _jsx(Text, {\n              style: styles.content,\n              children: message.content\n            })\n          }), _jsxs(View, {\n            style: styles.footer,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'flex-start'\n              },\n              children: [_jsx(Image, {\n                style: styles.icon,\n                source: require('E:/Upwork/React Native/AwesomeProject/assets/Vector.png')\n              }), _jsx(Image, {\n                style: styles.icon,\n                source: require('E:/Upwork/React Native/AwesomeProject/assets/Combined-Shape.png')\n              }), _jsx(Image, {\n                style: styles.icon,\n                source: require('E:/Upwork/React Native/AwesomeProject/assets/send.png')\n              })]\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'flex-end'\n              },\n              children: [_jsxs(Text, {\n                style: styles.text,\n                children: [message.comments, \" Comments\"]\n              }), _jsx(Image, {\n                style: styles.dot,\n                source: require('E:/Upwork/React Native/AwesomeProject/assets/Ellipse.png')\n              }), _jsxs(Text, {\n                style: styles.text,\n                children: [message.likes, \" likes\"]\n              })]\n            })]\n          })]\n        }, index)\n      });\n    });\n  };\n\n  return _jsx(View, {\n    children: postList()\n  });\n}\nvar styles = StyleSheet.create({\n  bb: {\n    background: \"linear-gradient(#FF9457, #E96114)\",\n    borderRadius: 12,\n    padding: 20\n  },\n  photo: {\n    width: 24,\n    height: 24,\n    borderRadius: 22\n  },\n  username: {\n    fontWeight: 500,\n    fontSize: 14,\n    lineHeight: 18,\n    marginLeft: 10,\n    color: '#FFFFFF'\n  },\n  category: {\n    height: 22,\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    borderColor: '#FFFFFF',\n    color: '#FFFFFF',\n    borderWidth: 1,\n    borderRadius: 12,\n    fontWeight: 500,\n    fontSize: 14,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingBottom: 2\n  },\n  content: {\n    fontWeight: 600,\n    fontSize: 17,\n    lineHeight: 22.1,\n    color: '#FFFFFF'\n  },\n  icon: {\n    width: 17,\n    height: 17,\n    marginRight: 18.3\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: 20\n  },\n  text: {\n    fontWeight: 500,\n    fontSize: 12,\n    color: '#FFFFFF'\n  },\n  dot: {\n    marginLeft: 6,\n    marginRight: 6,\n    width: 3,\n    height: 3,\n    marginTop: 7\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","PostList","messages","Animated","timing","backColorList","setBackColorList","postList","map","message","index","transform","translateX","state","offsetX","background","borderRadius","padding","paddingTop","marginBottom","color","styles","footer","flexDirection","justifyContent","photo","uri","profile_img","username","sender_name","category","tag","content","icon","require","text","comments","dot","likes","StyleSheet","create","bb","width","height","fontWeight","fontSize","lineHeight","marginLeft","backgroundColor","borderColor","borderWidth","paddingLeft","paddingRight","paddingBottom","marginRight","marginTop"],"sources":["E:/Upwork/React Native/AwesomeProject/src/Pages/Dashboard/postList/postList.tsx"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { View, StyleSheet, Animated, Image, Text } from 'react-native';\r\n\r\nexport default function PostList({messages}) {\r\n    \r\n    useEffect(() => {\r\n        Animated.timing()\r\n    })\r\n\r\n    const [backColorList, setBackColorList] = useState([\r\n        \"linear-gradient(111.39deg, #FF9457 -7.95%, #E96114 64.07%)\",\r\n        \"linear-gradient(111.39deg, #FF8AEC -7.95%, #B114E9 64.07%)\",\r\n        \"linear-gradient(111.39deg, #CAC5C9 -7.95%, #918D90 64.07%)\",\r\n        \"linear-gradient(111.39deg, #8CB5F2 -7.95%, #2A8DE8 64.07%)\"\r\n    ]) \r\n\r\n    const postList = () => {\r\n        return messages.map((message, index) => {\r\n            return (\r\n                <Animated.View style={{ transform: [{translateX: this.state.offsetX}] }}>\r\n                <View style={{\r\n                // background: \"linear-gradient(#FF9457, #E96114)\",\r\n                background: backColorList[index % 4],\r\n                borderRadius: 12,\r\n                padding: 20,\r\n                paddingTop: 0,\r\n                marginBottom: 14,\r\n                color: '#FFFFFF'\r\n            }} key={index}>\r\n                <View style={styles.footer}>\r\n                    <View style={{ flexDirection: 'row', justifyContent:'flex-start' }}>\r\n                        <Image style={styles.photo} source = {{uri: message.profile_img}}></Image>\r\n                        <Text style={styles.username}>{message.sender_name}</Text>\r\n                    </View>\r\n\r\n                    <View style={{ flexDirection: 'row', justifyContent:'flex-end' }}>\r\n                        <Text style={styles.category}>{message.tag}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.footer}>\r\n                    <Text style={styles.content}>{message.content}</Text>\r\n                </View>\r\n\r\n                <View style={styles.footer}>\r\n                    <View style={{ flexDirection: 'row', justifyContent:'flex-start' }}>\r\n                        <Image style={styles.icon} source={require('E:/Upwork/React Native/AwesomeProject/assets/Vector.png')}></Image>\r\n                        <Image style={styles.icon} source={require('E:/Upwork/React Native/AwesomeProject/assets/Combined-Shape.png')}></Image>\r\n                        <Image style={styles.icon} source={require('E:/Upwork/React Native/AwesomeProject/assets/send.png')}></Image>\r\n                    </View>\r\n\r\n                    <View style={{ flexDirection: 'row', justifyContent:'flex-end' }}>\r\n                        <Text style={styles.text}>{message.comments} Comments</Text>\r\n                        <Image style={styles.dot} source={require('E:/Upwork/React Native/AwesomeProject/assets/Ellipse.png')}></Image>\r\n                        <Text style={styles.text}>{message.likes} likes</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                </View>\r\n            </Animated.View>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            {postList()}\r\n        </View>\r\n    ) \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    \r\n    bb: {\r\n        background: \"linear-gradient(#FF9457, #E96114)\",\r\n        borderRadius: 12,\r\n        padding: 20,\r\n    },\r\n    \r\n    photo: {\r\n        width: 24,\r\n        height: 24,\r\n        borderRadius: 22\r\n    },\r\n\r\n    username: {\r\n        fontWeight: 500,\r\n        fontSize: 14,\r\n        lineHeight: 18,\r\n        marginLeft: 10,\r\n        color: '#FFFFFF'\r\n    },\r\n\r\n    category: {\r\n        height: 22,\r\n        backgroundColor: 'rgba(255,255,255,0.2)',\r\n        borderColor: '#FFFFFF',\r\n        color: '#FFFFFF',\r\n        borderWidth: 1,\r\n        borderRadius: 12,\r\n        fontWeight: 500,\r\n        fontSize: 14,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        paddingBottom:2,\r\n    },\r\n\r\n    content: {\r\n        fontWeight: 600,\r\n        fontSize: 17,\r\n        lineHeight: 22.1,\r\n        color: '#FFFFFF'\r\n    },\r\n\r\n    icon: {\r\n        width: 17,\r\n        height: 17,\r\n        marginRight: 18.3,\r\n    },\r\n\r\n    footer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingTop: 20,\r\n    },\r\n\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 12,\r\n        color: '#FFFFFF'\r\n    },\r\n\r\n    dot: {\r\n        marginLeft: 6,\r\n        marginRight: 6,\r\n        width: 3,\r\n        height: 3,\r\n        marginTop: 7\r\n    }\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}