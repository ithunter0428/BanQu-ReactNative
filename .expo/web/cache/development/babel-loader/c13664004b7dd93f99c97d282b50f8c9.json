{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport function getActiveStateExceptDrawer(param) {\n  var state = param;\n\n  if (!state.routes) {\n    return state;\n  }\n\n  if (state.routes[state.index].routeName === 'DrawerOpen') {\n    return getActiveState(state.routes[0]);\n  }\n\n  return getActiveState(state.routes[state.index]);\n}\nexport function isActiveRoute(state, routeName) {\n  if (state.routeName === routeName) {\n    return true;\n  }\n\n  if (!state.routes) {\n    return state.routeName === routeName;\n  }\n\n  if (state.routes[state.index].routeName === 'DrawerOpen') {\n    return isActiveRoute(state.routes[0], routeName);\n  }\n\n  return isActiveRoute(state.routes[state.index], routeName);\n}\nexport function getRouteNameByKey(state, key) {\n  if (state.key === key) {\n    return state.routeName;\n  }\n\n  if (!state.routes) {\n    return state.routeName;\n  }\n\n  if (state.routes[state.index].key === key) {\n    return state.routes[state.index].routeName;\n  }\n\n  return getRouteNameByKey(state.routes[state.index], key);\n}\nexport function getActiveState(param, parent) {\n  var state = param;\n\n  if (!state.routes) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      parent: parent\n    });\n  }\n\n  return getActiveState(state.routes[state.index], _objectSpread(_objectSpread({}, state), {}, {\n    parent: parent\n  }));\n}\nexport function getParent(state, routeName, parent) {\n  if (state.routeName === routeName) {\n    return parent;\n  }\n\n  if (!state.routes) {\n    return null;\n  }\n\n  for (var i = 0; i < state.routes.length; i += 1) {\n    var res = getParent(state.routes[i], routeName, state);\n\n    if (res) {\n      return res;\n    }\n  }\n\n  return null;\n}\nexport function inject(state, key, index, routes) {\n  if (!state.routes) {\n    return state;\n  }\n\n  if (state.key === key) {\n    if (routes) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        routes: routes,\n        index: index\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: index\n    });\n  }\n\n  return _objectSpread(_objectSpread({}, state), {}, {\n    routes: state.routes.map(function (x) {\n      return inject(x, key, index, routes);\n    })\n  });\n}\nexport function popPrevious(state, routeName) {\n  var parent = getParent(state, routeName);\n  var key = parent.key,\n      index = parent.index;\n\n  if (index) {\n    var routes = [].concat(_toConsumableArray(parent.routes.slice(0, index - 1)), _toConsumableArray(parent.routes.slice(index)));\n    var newState = inject(state, key, index - 1, routes);\n    return newState;\n  }\n\n  return state;\n}","map":{"version":3,"names":["getActiveStateExceptDrawer","param","state","routes","index","routeName","getActiveState","isActiveRoute","getRouteNameByKey","key","parent","getParent","i","length","res","inject","map","x","popPrevious","slice","newState"],"sources":["E:/Upwork/React Native/AwesomeProject/node_modules/react-native-router-flux/src/State.js"],"sourcesContent":["export function getActiveStateExceptDrawer(param) {\n  const state = param;\n  if (!state.routes) {\n    return state;\n  }\n  if (state.routes[state.index].routeName === 'DrawerOpen') {\n    return getActiveState(state.routes[0]);\n  }\n  return getActiveState(state.routes[state.index]);\n}\n\nexport function isActiveRoute(state, routeName) {\n  if (state.routeName === routeName) {\n    return true;\n  }\n  if (!state.routes) {\n    return state.routeName === routeName;\n  }\n  if (state.routes[state.index].routeName === 'DrawerOpen') {\n    return isActiveRoute(state.routes[0], routeName);\n  }\n  return isActiveRoute(state.routes[state.index], routeName);\n}\n\nexport function getRouteNameByKey(state, key) {\n  if (state.key === key) {\n    return state.routeName;\n  }\n  if (!state.routes) {\n    return state.routeName;\n  }\n  if (state.routes[state.index].key === key) {\n    return state.routes[state.index].routeName;\n  }\n  return getRouteNameByKey(state.routes[state.index], key);\n}\n\nexport function getActiveState(param, parent) {\n  const state = param;\n  if (!state.routes) {\n    return { ...state, parent };\n  }\n  return getActiveState(state.routes[state.index], { ...state, parent });\n}\n\nexport function getParent(state, routeName, parent) {\n  if (state.routeName === routeName) {\n    return parent;\n  }\n  if (!state.routes) {\n    return null;\n  }\n  for (let i = 0; i < state.routes.length; i += 1) {\n    const res = getParent(state.routes[i], routeName, state);\n    if (res) {\n      return res;\n    }\n  }\n  return null;\n}\n\nexport function inject(state, key, index, routes) {\n  if (!state.routes) {\n    return state;\n  }\n  if (state.key === key) {\n    if (routes) {\n      return { ...state, routes, index };\n    }\n    return { ...state, index };\n  }\n  return { ...state, routes: state.routes.map(x => inject(x, key, index, routes)) };\n}\n\nexport function popPrevious(state, routeName) {\n  const parent = getParent(state, routeName);\n  // console.log('FOUND PARENT:', JSON.stringify(parent));\n  const { key, index } = parent;\n  if (index) {\n    const routes = [...parent.routes.slice(0, index - 1), ...parent.routes.slice(index)];\n    const newState = inject(state, key, index - 1, routes);\n    return newState;\n  }\n  return state;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}