{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { HeaderBackButton } from 'react-navigation-stack';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationActions } from 'react-navigation';\nimport { DrawerActions } from 'react-navigation-drawer';\nimport _backButtonImage from \"../images/back_chevron.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nvar hitSlop = {\n  top: 15,\n  bottom: 15,\n  left: 15,\n  right: 15\n};\nexport function BackButton(state) {\n  var textButtonStyle = [styles.barBackButtonText, state.backButtonTextStyle];\n  var style = [styles.backButton, state.leftButtonStyle];\n  var buttonImage = state.backButtonImage || _backButtonImage;\n  var tintColor = getValue(state.backButtonTintColor, state) || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  var onPress = state.onBack;\n\n  if (onPress) {\n    onPress = onPress.bind(null, state);\n  } else {\n    onPress = function onPress() {\n      return state.navigation.dispatch(NavigationActions.back());\n    };\n  }\n\n  if (!state.backButtonImage) {\n    return _jsx(HeaderBackButton, {\n      onPress: onPress,\n      title: state.backTitle,\n      titleStyle: textButtonStyle,\n      tintColor: tintColor,\n      truncatedTitle: state.truncatedTitle\n    });\n  }\n\n  var text = state.backTitle ? _jsx(Text, {\n    style: textButtonStyle,\n    children: state.backTitle\n  }) : null;\n  return _jsx(TouchableOpacity, {\n    testID: \"backNavButton\",\n    style: styles.backButtonContainer,\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: style,\n      children: [buttonImage && !state.hideBackImage && _jsx(Image, {\n        source: buttonImage,\n        style: [styles.backButtonImage, state.barButtonIconStyle, state.leftButtonIconStyle, {\n          tintColor: tintColor\n        }]\n      }), text]\n    })\n  });\n}\nexport function LeftButton(state) {\n  var onPress = state.onLeft;\n  var buttonImage = getValue(state.leftButtonImage, state);\n  var menuIcon = getValue(state.drawerIcon, state);\n  var style = [styles.leftButton, state.leftButtonStyle];\n  var leftButtonTextStyle = getValue(state.leftButtonTextStyle, state);\n  var leftButtonIconStyle = getValue(state.leftButtonIconStyle, state);\n  var leftButtonStyle = [styles.defaultImageStyle, leftButtonIconStyle];\n  var leftTitle = state.getLeftTitle ? state.getLeftTitle(state) : getValue(state.leftTitle, state);\n  var textColor = getValue(state.leftButtonTintColor, state);\n  var tintColor = textColor || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  var textStyle = [styles.barLeftButtonText, tintColor && {\n    color: tintColor\n  }, leftButtonTextStyle, textColor && {\n    color: textColor\n  }];\n\n  if (state.leftButton || state.left) {\n    var Button = state.leftButton || state.left;\n    return _createElement(Button, _objectSpread(_objectSpread({}, state), {}, {\n      key: \"leftNavBarBtn\",\n      testID: \"leftNavButton\",\n      style: [].concat(style, leftButtonStyle),\n      textStyle: textStyle\n    }));\n  }\n\n  if (!onPress && !state.hideDrawerButton && (state.drawerImage || menuIcon) && state.drawerPosition !== 'right') {\n    buttonImage = state.drawerImage;\n\n    if (buttonImage || menuIcon) {\n      onPress = function onPress() {\n        return state.navigation.dispatch(DrawerActions.openDrawer());\n      };\n    }\n\n    if (!menuIcon) {\n      menuIcon = _jsx(Image, {\n        source: buttonImage,\n        style: [state.leftButtonIconStyle || styles.defaultImageStyle, {\n          tintColor: tintColor\n        }]\n      });\n    }\n  }\n\n  if (onPress && (leftTitle || buttonImage || menuIcon)) {\n    onPress = onPress.bind(null, state);\n    return _jsxs(TouchableOpacity, {\n      testID: \"leftNavButton\",\n      style: style,\n      onPress: onPress,\n      hitSlop: state.hitSlop || hitSlop,\n      children: [leftTitle && _jsx(Text, {\n        style: textStyle,\n        children: leftTitle\n      }), !leftTitle && (menuIcon || buttonImage) && _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'flex-start'\n        },\n        children: menuIcon || _jsx(Image, {\n          source: buttonImage,\n          style: [state.leftButtonIconStyle || styles.defaultImageStyle, {\n            tintColor: tintColor\n          }]\n        })\n      })]\n    }, \"leftNavBarBtn\");\n  }\n\n  if (!!state.onLeft ^ !!(leftTitle || buttonImage || menuIcon)) {\n    console.warn(\"Both onLeft and leftTitle/leftButtonImage\\n            must be specified for the scene: \" + state.name);\n  }\n\n  return null;\n}\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nexport function RightButton(state) {\n  if (!state) {\n    return null;\n  }\n\n  var onPress = state.onRight;\n  var buttonImage = getValue(state.rightButtonImage, state);\n  var menuIcon = state.drawerIcon;\n  var style = [styles.rightButton, state.rightButtonStyle];\n  var rightButtonTextStyle = getValue(state.rightButtonTextStyle, state);\n  var rightButtonIconStyle = getValue(state.rightButtonIconStyle, state);\n  var rightButtonStyle = [styles.defaultImageStyle, rightButtonIconStyle];\n  var rightTitle = state.getRightTitle ? state.getRightTitle(state) : getValue(state.rightTitle, state);\n  var textColor = getValue(state.rightButtonTintColor, state);\n  var tintColor = textColor || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  var textStyle = [styles.barRightButtonText, tintColor && {\n    color: tintColor\n  }, rightButtonTextStyle, textColor && {\n    color: textColor\n  }];\n\n  if (state.rightButton || state.right) {\n    var Button = state.rightButton || state.right;\n    return _createElement(Button, _objectSpread(_objectSpread({}, state), {}, {\n      key: \"rightNavBarBtn\",\n      testID: \"rightNavButton\",\n      style: style,\n      textButtonStyle: textStyle\n    }));\n  }\n\n  if (!onPress && !state.hideDrawerButton && state.drawerImage && state.drawerPosition === 'right') {\n    buttonImage = state.drawerImage;\n\n    if (buttonImage || menuIcon) {\n      onPress = function onPress() {\n        return state.navigation.dispatch(DrawerActions.openDrawer());\n      };\n    }\n\n    if (!menuIcon) {\n      menuIcon = _jsx(Image, {\n        source: buttonImage,\n        style: [rightButtonStyle, {\n          tintColor: tintColor\n        }]\n      });\n    }\n  }\n\n  if (onPress && (rightTitle || buttonImage)) {\n    onPress = onPress.bind(null, state);\n    return _jsxs(TouchableOpacity, {\n      testID: \"rightNavButton\",\n      style: style,\n      onPress: onPress,\n      hitSlop: state.hitSlop || hitSlop,\n      children: [rightTitle && _jsx(Text, {\n        style: textStyle,\n        children: rightTitle\n      }), !rightTitle && buttonImage && _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'flex-end'\n        },\n        children: menuIcon || _jsx(Image, {\n          source: buttonImage,\n          style: [state.rightButtonIconStyle || styles.defaultImageStyle, {\n            tintColor: tintColor\n          }]\n        })\n      })]\n    }, \"rightNavBarBtn\");\n  }\n\n  if (!!state.onRight ^ !!(typeof rightTitle !== 'undefined' || typeof buttonImage !== 'undefined')) {\n    console.warn(\"Both onRight and rightTitle/rightButtonImage\\n            must be specified for the scene: \" + state.routeName);\n  }\n\n  return null;\n}\nvar styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n    color: '#0A0A0A',\n    fontSize: 18,\n    width: 180,\n    alignSelf: 'center'\n  },\n  titleImage: {\n    width: 180,\n    alignSelf: 'center'\n  },\n  titleWrapper: _objectSpread({\n    marginTop: 10\n  }, Platform.select({\n    ios: {\n      top: 20\n    },\n    android: {\n      top: 5\n    },\n    windows: {\n      top: 5\n    }\n  })),\n  header: _objectSpread(_objectSpread({\n    backgroundColor: '#EFEFF2',\n    paddingTop: 0\n  }, Platform.select({\n    ios: {\n      height: 64\n    },\n    android: {\n      height: 54\n    },\n    windows: {\n      height: 54\n    }\n  })), {}, {\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#828287'\n  }),\n  backButton: _objectSpread(_objectSpread({}, Platform.select({\n    ios: {\n      top: 12\n    },\n    android: {\n      top: 10\n    },\n    windows: {\n      top: 8\n    }\n  })), {}, {\n    left: 2,\n    paddingLeft: 8,\n    flexDirection: 'row',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }),\n  rightButton: {\n    right: 2,\n    paddingRight: 8\n  },\n  leftButton: {\n    left: 2,\n    paddingLeft: 8\n  },\n  barRightButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'right',\n    fontSize: 17\n  },\n  barBackButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n    paddingLeft: 6\n  },\n  barLeftButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17\n  },\n  backButtonContainer: {\n    height: 50,\n    width: 70\n  },\n  backButtonImage: _objectSpread(_objectSpread({}, Platform.select({\n    android: {\n      marginTop: 5\n    }\n  })), {}, {\n    width: 13,\n    height: 21\n  }),\n  defaultImageStyle: {\n    height: 24,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"names":["React","HeaderBackButton","NavigationActions","DrawerActions","_backButtonImage","hitSlop","top","bottom","left","right","BackButton","state","textButtonStyle","styles","barBackButtonText","backButtonTextStyle","style","backButton","leftButtonStyle","buttonImage","backButtonImage","tintColor","getValue","backButtonTintColor","navBarButtonColor","headerTintColor","onPress","onBack","bind","navigation","dispatch","back","backTitle","truncatedTitle","text","backButtonContainer","hideBackImage","barButtonIconStyle","leftButtonIconStyle","LeftButton","onLeft","leftButtonImage","menuIcon","drawerIcon","leftButton","leftButtonTextStyle","defaultImageStyle","leftTitle","getLeftTitle","textColor","leftButtonTintColor","textStyle","barLeftButtonText","color","Button","hideDrawerButton","drawerImage","drawerPosition","openDrawer","flex","justifyContent","alignItems","console","warn","name","value","params","Function","RightButton","onRight","rightButtonImage","rightButton","rightButtonStyle","rightButtonTextStyle","rightButtonIconStyle","rightTitle","getRightTitle","rightButtonTintColor","barRightButtonText","routeName","StyleSheet","create","title","textAlign","fontSize","width","alignSelf","titleImage","titleWrapper","marginTop","Platform","select","ios","android","windows","header","backgroundColor","paddingTop","height","borderBottomWidth","borderBottomColor","paddingLeft","flexDirection","transform","scaleX","I18nManager","isRTL","paddingRight","resizeMode"],"sources":["E:/Upwork/React Native/AwesomeProject/node_modules/react-native-router-flux/src/NavBar.js"],"sourcesContent":["import React from 'react';\nimport { HeaderBackButton } from 'react-navigation-stack';\nimport {\n  Platform, I18nManager, Image, StyleSheet, Text, TouchableOpacity, View,\n} from 'react-native';\nimport { NavigationActions } from 'react-navigation';\nimport { DrawerActions } from 'react-navigation-drawer';\nimport _backButtonImage from '../images/back_chevron.png';\n\nconst hitSlop = {\n  top: 15,\n  bottom: 15,\n  left: 15,\n  right: 15,\n};\nexport function BackButton(state) {\n  const textButtonStyle = [styles.barBackButtonText, state.backButtonTextStyle];\n  const style = [styles.backButton, state.leftButtonStyle];\n  const buttonImage = state.backButtonImage || _backButtonImage;\n  const tintColor = getValue(state.backButtonTintColor, state) || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  let onPress = state.onBack;\n  if (onPress) {\n    onPress = onPress.bind(null, state);\n  } else {\n    onPress = () => state.navigation.dispatch(NavigationActions.back());\n  }\n\n  // returning react-navigation's back button well styled for ios and android if rnrf4-supported customization\n  // is not required\n  if (!state.backButtonImage) {\n    return <HeaderBackButton onPress={onPress} title={state.backTitle} titleStyle={textButtonStyle} tintColor={tintColor} truncatedTitle={state.truncatedTitle} />;\n  }\n\n  const text = state.backTitle ? <Text style={textButtonStyle}>{state.backTitle}</Text> : null;\n\n  return (\n    <TouchableOpacity testID=\"backNavButton\" style={styles.backButtonContainer} onPress={onPress}>\n      <View style={style}>\n        {buttonImage && !state.hideBackImage && <Image source={buttonImage} style={[styles.backButtonImage, state.barButtonIconStyle, state.leftButtonIconStyle, { tintColor }]} />}\n        {text}\n      </View>\n    </TouchableOpacity>\n  );\n}\n\nexport function LeftButton(state) {\n  let onPress = state.onLeft;\n  let buttonImage = getValue(state.leftButtonImage, state);\n  let menuIcon = getValue(state.drawerIcon, state);\n  const style = [styles.leftButton, state.leftButtonStyle];\n  const leftButtonTextStyle = getValue(state.leftButtonTextStyle, state);\n  const leftButtonIconStyle = getValue(state.leftButtonIconStyle, state);\n  const leftButtonStyle = [styles.defaultImageStyle, leftButtonIconStyle];\n  const leftTitle = state.getLeftTitle ? state.getLeftTitle(state) : getValue(state.leftTitle, state);\n  const textColor = getValue(state.leftButtonTintColor, state);\n  const tintColor = textColor || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  const textStyle = [styles.barLeftButtonText, tintColor && { color: tintColor }, leftButtonTextStyle, textColor && { color: textColor }];\n\n  if (state.leftButton || state.left) {\n    const Button = state.leftButton || state.left;\n    return <Button {...state} key=\"leftNavBarBtn\" testID=\"leftNavButton\" style={[...style, ...leftButtonStyle]} textStyle={textStyle} />;\n  }\n\n  if (!onPress && !state.hideDrawerButton && (state.drawerImage || menuIcon) && state.drawerPosition !== 'right') {\n    buttonImage = state.drawerImage;\n    if (buttonImage || menuIcon) {\n      onPress = () => state.navigation.dispatch(DrawerActions.openDrawer());\n    }\n    if (!menuIcon) {\n      menuIcon = <Image source={buttonImage} style={[state.leftButtonIconStyle || styles.defaultImageStyle, { tintColor }]} />;\n    }\n  }\n\n  if (onPress && (leftTitle || buttonImage || menuIcon)) {\n    onPress = onPress.bind(null, state);\n    return (\n      <TouchableOpacity key=\"leftNavBarBtn\" testID=\"leftNavButton\" style={style} onPress={onPress} hitSlop={state.hitSlop || hitSlop}>\n        {leftTitle && <Text style={textStyle}>{leftTitle}</Text>}\n        {!leftTitle && (menuIcon || buttonImage) && (\n          <View\n            style={{\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'flex-start',\n            }}\n          >\n            {menuIcon || <Image source={buttonImage} style={[state.leftButtonIconStyle || styles.defaultImageStyle, { tintColor }]} />}\n          </View>\n        )}\n      </TouchableOpacity>\n    );\n  }\n  if (!!state.onLeft ^ !!(leftTitle || buttonImage || menuIcon)) {\n    console.warn(`Both onLeft and leftTitle/leftButtonImage\n            must be specified for the scene: ${state.name}`);\n  }\n  return null;\n}\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nexport function RightButton(state) {\n  if (!state) {\n    return null;\n  }\n\n  let onPress = state.onRight;\n  let buttonImage = getValue(state.rightButtonImage, state);\n  let menuIcon = state.drawerIcon;\n  const style = [styles.rightButton, state.rightButtonStyle];\n  const rightButtonTextStyle = getValue(state.rightButtonTextStyle, state);\n  const rightButtonIconStyle = getValue(state.rightButtonIconStyle, state);\n  const rightButtonStyle = [styles.defaultImageStyle, rightButtonIconStyle];\n  const rightTitle = state.getRightTitle ? state.getRightTitle(state) : getValue(state.rightTitle, state);\n  const textColor = getValue(state.rightButtonTintColor, state);\n  const tintColor = textColor || state.tintColor || state.navBarButtonColor || state.headerTintColor;\n  const textStyle = [styles.barRightButtonText, tintColor && { color: tintColor }, rightButtonTextStyle, textColor && { color: textColor }];\n\n  if (state.rightButton || state.right) {\n    const Button = state.rightButton || state.right;\n    return <Button {...state} key=\"rightNavBarBtn\" testID=\"rightNavButton\" style={style} textButtonStyle={textStyle} />;\n  }\n\n  if (!onPress && !state.hideDrawerButton && state.drawerImage && state.drawerPosition === 'right') {\n    buttonImage = state.drawerImage;\n    if (buttonImage || menuIcon) {\n      onPress = () => state.navigation.dispatch(DrawerActions.openDrawer());\n    }\n    if (!menuIcon) {\n      menuIcon = <Image source={buttonImage} style={[rightButtonStyle, { tintColor }]} />;\n    }\n  }\n\n  if (onPress && (rightTitle || buttonImage)) {\n    onPress = onPress.bind(null, state);\n    return (\n      <TouchableOpacity key=\"rightNavBarBtn\" testID=\"rightNavButton\" style={style} onPress={onPress} hitSlop={state.hitSlop || hitSlop}>\n        {rightTitle && <Text style={textStyle}>{rightTitle}</Text>}\n        {!rightTitle && buttonImage && (\n          <View\n            style={{\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'flex-end',\n            }}\n          >\n            {menuIcon || <Image source={buttonImage} style={[state.rightButtonIconStyle || styles.defaultImageStyle, { tintColor }]} />}\n          </View>\n        )}\n      </TouchableOpacity>\n    );\n  }\n  if (!!state.onRight ^ !!(typeof rightTitle !== 'undefined' || typeof buttonImage !== 'undefined')) {\n    console.warn(`Both onRight and rightTitle/rightButtonImage\n            must be specified for the scene: ${state.routeName}`);\n  }\n  return null;\n}\nconst styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n    color: '#0A0A0A',\n    fontSize: 18,\n    width: 180,\n    alignSelf: 'center',\n  },\n  titleImage: {\n    width: 180,\n    alignSelf: 'center',\n  },\n  titleWrapper: {\n    marginTop: 10,\n    ...Platform.select({\n      ios: {\n        top: 20,\n      },\n      android: {\n        top: 5,\n      },\n      windows: {\n        top: 5,\n      },\n    }),\n  },\n  header: {\n    backgroundColor: '#EFEFF2',\n    paddingTop: 0,\n    ...Platform.select({\n      ios: {\n        height: 64,\n      },\n      android: {\n        height: 54,\n      },\n      windows: {\n        height: 54,\n      },\n    }),\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#828287',\n  },\n  backButton: {\n    ...Platform.select({\n      ios: {\n        top: 12,\n      },\n      android: {\n        top: 10,\n      },\n      windows: {\n        top: 8,\n      },\n    }),\n    left: 2,\n    paddingLeft: 8,\n    flexDirection: 'row',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  rightButton: {\n    right: 2,\n    paddingRight: 8,\n  },\n  leftButton: {\n    left: 2,\n    paddingLeft: 8,\n  },\n  barRightButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'right',\n    fontSize: 17,\n  },\n  barBackButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n    paddingLeft: 6,\n  },\n  barLeftButtonText: {\n    color: 'rgb(0, 122, 255)',\n    textAlign: 'left',\n    fontSize: 17,\n  },\n  backButtonContainer: {\n    height: 50,\n    width: 70,\n  },\n  backButtonImage: {\n    ...Platform.select({\n      android: {\n        marginTop: 5,\n      },\n    }),\n    width: 13,\n    height: 21,\n  },\n  defaultImageStyle: {\n    height: 24,\n    resizeMode: 'contain',\n  },\n});\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;;;;;;;AAIA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,gBAAP;;;;AAEA,IAAMC,OAAO,GAAG;EACdC,GAAG,EAAE,EADS;EAEdC,MAAM,EAAE,EAFM;EAGdC,IAAI,EAAE,EAHQ;EAIdC,KAAK,EAAE;AAJO,CAAhB;AAMA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAChC,IAAMC,eAAe,GAAG,CAACC,MAAM,CAACC,iBAAR,EAA2BH,KAAK,CAACI,mBAAjC,CAAxB;EACA,IAAMC,KAAK,GAAG,CAACH,MAAM,CAACI,UAAR,EAAoBN,KAAK,CAACO,eAA1B,CAAd;EACA,IAAMC,WAAW,GAAGR,KAAK,CAACS,eAAN,IAAyBhB,gBAA7C;EACA,IAAMiB,SAAS,GAAGC,QAAQ,CAACX,KAAK,CAACY,mBAAP,EAA4BZ,KAA5B,CAAR,IAA8CA,KAAK,CAACU,SAApD,IAAiEV,KAAK,CAACa,iBAAvE,IAA4Fb,KAAK,CAACc,eAApH;EACA,IAAIC,OAAO,GAAGf,KAAK,CAACgB,MAApB;;EACA,IAAID,OAAJ,EAAa;IACXA,OAAO,GAAGA,OAAO,CAACE,IAAR,CAAa,IAAb,EAAmBjB,KAAnB,CAAV;EACD,CAFD,MAEO;IACLe,OAAO,GAAG;MAAA,OAAMf,KAAK,CAACkB,UAAN,CAAiBC,QAAjB,CAA0B5B,iBAAiB,CAAC6B,IAAlB,EAA1B,CAAN;IAAA,CAAV;EACD;;EAID,IAAI,CAACpB,KAAK,CAACS,eAAX,EAA4B;IAC1B,OAAO,KAAC,gBAAD;MAAkB,OAAO,EAAEM,OAA3B;MAAoC,KAAK,EAAEf,KAAK,CAACqB,SAAjD;MAA4D,UAAU,EAAEpB,eAAxE;MAAyF,SAAS,EAAES,SAApG;MAA+G,cAAc,EAAEV,KAAK,CAACsB;IAArI,EAAP;EACD;;EAED,IAAMC,IAAI,GAAGvB,KAAK,CAACqB,SAAN,GAAkB,KAAC,IAAD;IAAM,KAAK,EAAEpB,eAAb;IAAA,UAA+BD,KAAK,CAACqB;EAArC,EAAlB,GAA2E,IAAxF;EAEA,OACE,KAAC,gBAAD;IAAkB,MAAM,EAAC,eAAzB;IAAyC,KAAK,EAAEnB,MAAM,CAACsB,mBAAvD;IAA4E,OAAO,EAAET,OAArF;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEV,KAAb;MAAA,WACGG,WAAW,IAAI,CAACR,KAAK,CAACyB,aAAtB,IAAuC,KAAC,KAAD;QAAO,MAAM,EAAEjB,WAAf;QAA4B,KAAK,EAAE,CAACN,MAAM,CAACO,eAAR,EAAyBT,KAAK,CAAC0B,kBAA/B,EAAmD1B,KAAK,CAAC2B,mBAAzD,EAA8E;UAAEjB,SAAS,EAATA;QAAF,CAA9E;MAAnC,EAD1C,EAEGa,IAFH;IAAA;EADF,EADF;AAQD;AAED,OAAO,SAASK,UAAT,CAAoB5B,KAApB,EAA2B;EAChC,IAAIe,OAAO,GAAGf,KAAK,CAAC6B,MAApB;EACA,IAAIrB,WAAW,GAAGG,QAAQ,CAACX,KAAK,CAAC8B,eAAP,EAAwB9B,KAAxB,CAA1B;EACA,IAAI+B,QAAQ,GAAGpB,QAAQ,CAACX,KAAK,CAACgC,UAAP,EAAmBhC,KAAnB,CAAvB;EACA,IAAMK,KAAK,GAAG,CAACH,MAAM,CAAC+B,UAAR,EAAoBjC,KAAK,CAACO,eAA1B,CAAd;EACA,IAAM2B,mBAAmB,GAAGvB,QAAQ,CAACX,KAAK,CAACkC,mBAAP,EAA4BlC,KAA5B,CAApC;EACA,IAAM2B,mBAAmB,GAAGhB,QAAQ,CAACX,KAAK,CAAC2B,mBAAP,EAA4B3B,KAA5B,CAApC;EACA,IAAMO,eAAe,GAAG,CAACL,MAAM,CAACiC,iBAAR,EAA2BR,mBAA3B,CAAxB;EACA,IAAMS,SAAS,GAAGpC,KAAK,CAACqC,YAAN,GAAqBrC,KAAK,CAACqC,YAAN,CAAmBrC,KAAnB,CAArB,GAAiDW,QAAQ,CAACX,KAAK,CAACoC,SAAP,EAAkBpC,KAAlB,CAA3E;EACA,IAAMsC,SAAS,GAAG3B,QAAQ,CAACX,KAAK,CAACuC,mBAAP,EAA4BvC,KAA5B,CAA1B;EACA,IAAMU,SAAS,GAAG4B,SAAS,IAAItC,KAAK,CAACU,SAAnB,IAAgCV,KAAK,CAACa,iBAAtC,IAA2Db,KAAK,CAACc,eAAnF;EACA,IAAM0B,SAAS,GAAG,CAACtC,MAAM,CAACuC,iBAAR,EAA2B/B,SAAS,IAAI;IAAEgC,KAAK,EAAEhC;EAAT,CAAxC,EAA8DwB,mBAA9D,EAAmFI,SAAS,IAAI;IAAEI,KAAK,EAAEJ;EAAT,CAAhG,CAAlB;;EAEA,IAAItC,KAAK,CAACiC,UAAN,IAAoBjC,KAAK,CAACH,IAA9B,EAAoC;IAClC,IAAM8C,MAAM,GAAG3C,KAAK,CAACiC,UAAN,IAAoBjC,KAAK,CAACH,IAAzC;IACA,OAAO,eAAC,MAAD,kCAAYG,KAAZ;MAAmB,GAAG,EAAC,eAAvB;MAAuC,MAAM,EAAC,eAA9C;MAA8D,KAAK,YAAMK,KAAN,EAAgBE,eAAhB,CAAnE;MAAqG,SAAS,EAAEiC;IAAhH,GAAP;EACD;;EAED,IAAI,CAACzB,OAAD,IAAY,CAACf,KAAK,CAAC4C,gBAAnB,KAAwC5C,KAAK,CAAC6C,WAAN,IAAqBd,QAA7D,KAA0E/B,KAAK,CAAC8C,cAAN,KAAyB,OAAvG,EAAgH;IAC9GtC,WAAW,GAAGR,KAAK,CAAC6C,WAApB;;IACA,IAAIrC,WAAW,IAAIuB,QAAnB,EAA6B;MAC3BhB,OAAO,GAAG;QAAA,OAAMf,KAAK,CAACkB,UAAN,CAAiBC,QAAjB,CAA0B3B,aAAa,CAACuD,UAAd,EAA1B,CAAN;MAAA,CAAV;IACD;;IACD,IAAI,CAAChB,QAAL,EAAe;MACbA,QAAQ,GAAG,KAAC,KAAD;QAAO,MAAM,EAAEvB,WAAf;QAA4B,KAAK,EAAE,CAACR,KAAK,CAAC2B,mBAAN,IAA6BzB,MAAM,CAACiC,iBAArC,EAAwD;UAAEzB,SAAS,EAATA;QAAF,CAAxD;MAAnC,EAAX;IACD;EACF;;EAED,IAAIK,OAAO,KAAKqB,SAAS,IAAI5B,WAAb,IAA4BuB,QAAjC,CAAX,EAAuD;IACrDhB,OAAO,GAAGA,OAAO,CAACE,IAAR,CAAa,IAAb,EAAmBjB,KAAnB,CAAV;IACA,OACE,MAAC,gBAAD;MAAsC,MAAM,EAAC,eAA7C;MAA6D,KAAK,EAAEK,KAApE;MAA2E,OAAO,EAAEU,OAApF;MAA6F,OAAO,EAAEf,KAAK,CAACN,OAAN,IAAiBA,OAAvH;MAAA,WACG0C,SAAS,IAAI,KAAC,IAAD;QAAM,KAAK,EAAEI,SAAb;QAAA,UAAyBJ;MAAzB,EADhB,EAEG,CAACA,SAAD,KAAeL,QAAQ,IAAIvB,WAA3B,KACC,KAAC,IAAD;QACE,KAAK,EAAE;UACLwC,IAAI,EAAE,CADD;UAELC,cAAc,EAAE,QAFX;UAGLC,UAAU,EAAE;QAHP,CADT;QAAA,UAOGnB,QAAQ,IAAI,KAAC,KAAD;UAAO,MAAM,EAAEvB,WAAf;UAA4B,KAAK,EAAE,CAACR,KAAK,CAAC2B,mBAAN,IAA6BzB,MAAM,CAACiC,iBAArC,EAAwD;YAAEzB,SAAS,EAATA;UAAF,CAAxD;QAAnC;MAPf,EAHJ;IAAA,GAAsB,eAAtB,CADF;EAgBD;;EACD,IAAI,CAAC,CAACV,KAAK,CAAC6B,MAAR,GAAiB,CAAC,EAAEO,SAAS,IAAI5B,WAAb,IAA4BuB,QAA9B,CAAtB,EAA+D;IAC7DoB,OAAO,CAACC,IAAR,8FAC2CpD,KAAK,CAACqD,IADjD;EAED;;EACD,OAAO,IAAP;AACD;;AAED,SAAS1C,QAAT,CAAkB2C,KAAlB,EAAyBC,MAAzB,EAAiC;EAC/B,OAAOD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACC,MAAD,CAAjC,GAA4CD,KAAnD;AACD;;AAED,OAAO,SAASG,WAAT,CAAqBzD,KAArB,EAA4B;EACjC,IAAI,CAACA,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EAED,IAAIe,OAAO,GAAGf,KAAK,CAAC0D,OAApB;EACA,IAAIlD,WAAW,GAAGG,QAAQ,CAACX,KAAK,CAAC2D,gBAAP,EAAyB3D,KAAzB,CAA1B;EACA,IAAI+B,QAAQ,GAAG/B,KAAK,CAACgC,UAArB;EACA,IAAM3B,KAAK,GAAG,CAACH,MAAM,CAAC0D,WAAR,EAAqB5D,KAAK,CAAC6D,gBAA3B,CAAd;EACA,IAAMC,oBAAoB,GAAGnD,QAAQ,CAACX,KAAK,CAAC8D,oBAAP,EAA6B9D,KAA7B,CAArC;EACA,IAAM+D,oBAAoB,GAAGpD,QAAQ,CAACX,KAAK,CAAC+D,oBAAP,EAA6B/D,KAA7B,CAArC;EACA,IAAM6D,gBAAgB,GAAG,CAAC3D,MAAM,CAACiC,iBAAR,EAA2B4B,oBAA3B,CAAzB;EACA,IAAMC,UAAU,GAAGhE,KAAK,CAACiE,aAAN,GAAsBjE,KAAK,CAACiE,aAAN,CAAoBjE,KAApB,CAAtB,GAAmDW,QAAQ,CAACX,KAAK,CAACgE,UAAP,EAAmBhE,KAAnB,CAA9E;EACA,IAAMsC,SAAS,GAAG3B,QAAQ,CAACX,KAAK,CAACkE,oBAAP,EAA6BlE,KAA7B,CAA1B;EACA,IAAMU,SAAS,GAAG4B,SAAS,IAAItC,KAAK,CAACU,SAAnB,IAAgCV,KAAK,CAACa,iBAAtC,IAA2Db,KAAK,CAACc,eAAnF;EACA,IAAM0B,SAAS,GAAG,CAACtC,MAAM,CAACiE,kBAAR,EAA4BzD,SAAS,IAAI;IAAEgC,KAAK,EAAEhC;EAAT,CAAzC,EAA+DoD,oBAA/D,EAAqFxB,SAAS,IAAI;IAAEI,KAAK,EAAEJ;EAAT,CAAlG,CAAlB;;EAEA,IAAItC,KAAK,CAAC4D,WAAN,IAAqB5D,KAAK,CAACF,KAA/B,EAAsC;IACpC,IAAM6C,MAAM,GAAG3C,KAAK,CAAC4D,WAAN,IAAqB5D,KAAK,CAACF,KAA1C;IACA,OAAO,eAAC,MAAD,kCAAYE,KAAZ;MAAmB,GAAG,EAAC,gBAAvB;MAAwC,MAAM,EAAC,gBAA/C;MAAgE,KAAK,EAAEK,KAAvE;MAA8E,eAAe,EAAEmC;IAA/F,GAAP;EACD;;EAED,IAAI,CAACzB,OAAD,IAAY,CAACf,KAAK,CAAC4C,gBAAnB,IAAuC5C,KAAK,CAAC6C,WAA7C,IAA4D7C,KAAK,CAAC8C,cAAN,KAAyB,OAAzF,EAAkG;IAChGtC,WAAW,GAAGR,KAAK,CAAC6C,WAApB;;IACA,IAAIrC,WAAW,IAAIuB,QAAnB,EAA6B;MAC3BhB,OAAO,GAAG;QAAA,OAAMf,KAAK,CAACkB,UAAN,CAAiBC,QAAjB,CAA0B3B,aAAa,CAACuD,UAAd,EAA1B,CAAN;MAAA,CAAV;IACD;;IACD,IAAI,CAAChB,QAAL,EAAe;MACbA,QAAQ,GAAG,KAAC,KAAD;QAAO,MAAM,EAAEvB,WAAf;QAA4B,KAAK,EAAE,CAACqD,gBAAD,EAAmB;UAAEnD,SAAS,EAATA;QAAF,CAAnB;MAAnC,EAAX;IACD;EACF;;EAED,IAAIK,OAAO,KAAKiD,UAAU,IAAIxD,WAAnB,CAAX,EAA4C;IAC1CO,OAAO,GAAGA,OAAO,CAACE,IAAR,CAAa,IAAb,EAAmBjB,KAAnB,CAAV;IACA,OACE,MAAC,gBAAD;MAAuC,MAAM,EAAC,gBAA9C;MAA+D,KAAK,EAAEK,KAAtE;MAA6E,OAAO,EAAEU,OAAtF;MAA+F,OAAO,EAAEf,KAAK,CAACN,OAAN,IAAiBA,OAAzH;MAAA,WACGsE,UAAU,IAAI,KAAC,IAAD;QAAM,KAAK,EAAExB,SAAb;QAAA,UAAyBwB;MAAzB,EADjB,EAEG,CAACA,UAAD,IAAexD,WAAf,IACC,KAAC,IAAD;QACE,KAAK,EAAE;UACLwC,IAAI,EAAE,CADD;UAELC,cAAc,EAAE,QAFX;UAGLC,UAAU,EAAE;QAHP,CADT;QAAA,UAOGnB,QAAQ,IAAI,KAAC,KAAD;UAAO,MAAM,EAAEvB,WAAf;UAA4B,KAAK,EAAE,CAACR,KAAK,CAAC+D,oBAAN,IAA8B7D,MAAM,CAACiC,iBAAtC,EAAyD;YAAEzB,SAAS,EAATA;UAAF,CAAzD;QAAnC;MAPf,EAHJ;IAAA,GAAsB,gBAAtB,CADF;EAgBD;;EACD,IAAI,CAAC,CAACV,KAAK,CAAC0D,OAAR,GAAkB,CAAC,EAAE,OAAOM,UAAP,KAAsB,WAAtB,IAAqC,OAAOxD,WAAP,KAAuB,WAA9D,CAAvB,EAAmG;IACjG2C,OAAO,CAACC,IAAR,iGAC2CpD,KAAK,CAACoE,SADjD;EAED;;EACD,OAAO,IAAP;AACD;AACD,IAAMlE,MAAM,GAAGmE,UAAU,CAACC,MAAX,CAAkB;EAC/BC,KAAK,EAAE;IACLC,SAAS,EAAE,QADN;IAEL9B,KAAK,EAAE,SAFF;IAGL+B,QAAQ,EAAE,EAHL;IAILC,KAAK,EAAE,GAJF;IAKLC,SAAS,EAAE;EALN,CADwB;EAQ/BC,UAAU,EAAE;IACVF,KAAK,EAAE,GADG;IAEVC,SAAS,EAAE;EAFD,CARmB;EAY/BE,YAAY;IACVC,SAAS,EAAE;EADD,GAEPC,QAAQ,CAACC,MAAT,CAAgB;IACjBC,GAAG,EAAE;MACHtF,GAAG,EAAE;IADF,CADY;IAIjBuF,OAAO,EAAE;MACPvF,GAAG,EAAE;IADE,CAJQ;IAOjBwF,OAAO,EAAE;MACPxF,GAAG,EAAE;IADE;EAPQ,CAAhB,CAFO,CAZmB;EA0B/ByF,MAAM;IACJC,eAAe,EAAE,SADb;IAEJC,UAAU,EAAE;EAFR,GAGDP,QAAQ,CAACC,MAAT,CAAgB;IACjBC,GAAG,EAAE;MACHM,MAAM,EAAE;IADL,CADY;IAIjBL,OAAO,EAAE;MACPK,MAAM,EAAE;IADD,CAJQ;IAOjBJ,OAAO,EAAE;MACPI,MAAM,EAAE;IADD;EAPQ,CAAhB,CAHC;IAcJC,iBAAiB,EAAE,GAdf;IAeJC,iBAAiB,EAAE;EAff,EA1ByB;EA2C/BnF,UAAU,kCACLyE,QAAQ,CAACC,MAAT,CAAgB;IACjBC,GAAG,EAAE;MACHtF,GAAG,EAAE;IADF,CADY;IAIjBuF,OAAO,EAAE;MACPvF,GAAG,EAAE;IADE,CAJQ;IAOjBwF,OAAO,EAAE;MACPxF,GAAG,EAAE;IADE;EAPQ,CAAhB,CADK;IAYRE,IAAI,EAAE,CAZE;IAaR6F,WAAW,EAAE,CAbL;IAcRC,aAAa,EAAE,KAdP;IAeRC,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAEC,WAAW,CAACC,KAAZ,GAAoB,CAAC,CAArB,GAAyB;IAAnC,CAAD;EAfH,EA3CqB;EA4D/BnC,WAAW,EAAE;IACX9D,KAAK,EAAE,CADI;IAEXkG,YAAY,EAAE;EAFH,CA5DkB;EAgE/B/D,UAAU,EAAE;IACVpC,IAAI,EAAE,CADI;IAEV6F,WAAW,EAAE;EAFH,CAhEmB;EAoE/BvB,kBAAkB,EAAE;IAClBzB,KAAK,EAAE,kBADW;IAElB8B,SAAS,EAAE,OAFO;IAGlBC,QAAQ,EAAE;EAHQ,CApEW;EAyE/BtE,iBAAiB,EAAE;IACjBuC,KAAK,EAAE,kBADU;IAEjB8B,SAAS,EAAE,MAFM;IAGjBC,QAAQ,EAAE,EAHO;IAIjBiB,WAAW,EAAE;EAJI,CAzEY;EA+E/BjD,iBAAiB,EAAE;IACjBC,KAAK,EAAE,kBADU;IAEjB8B,SAAS,EAAE,MAFM;IAGjBC,QAAQ,EAAE;EAHO,CA/EY;EAoF/BjD,mBAAmB,EAAE;IACnB+D,MAAM,EAAE,EADW;IAEnBb,KAAK,EAAE;EAFY,CApFU;EAwF/BjE,eAAe,kCACVsE,QAAQ,CAACC,MAAT,CAAgB;IACjBE,OAAO,EAAE;MACPJ,SAAS,EAAE;IADJ;EADQ,CAAhB,CADU;IAMbJ,KAAK,EAAE,EANM;IAOba,MAAM,EAAE;EAPK,EAxFgB;EAiG/BpD,iBAAiB,EAAE;IACjBoD,MAAM,EAAE,EADS;IAEjBU,UAAU,EAAE;EAFK;AAjGY,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}