{"ast":null,"code":"import AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport userProfileReducer from \"./src/Redux/Reducers/reducer\";\nimport Dashboard from \"./src/Pages/Dashboard\";\nimport PostForm from \"./src/Pages/Post\";\nimport BroadCast from \"./src/Pages/Broadcast\";\nimport PostEditor from \"./src/Pages/PostEditor\";\nimport LocationForm from \"./src/Pages/Location/LocationForm\";\nimport Profile from \"./src/Pages/Dashboard/profile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar store = createStore(userProfileReducer);\nexport default function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          animationEnabled: false,\n          headerShown: true,\n          headerStyled: {\n            backgroundColor: 'transparent',\n            elevation: 0\n          },\n          headerShadowVisible: false,\n          headerTransparent: true,\n          headerTitle: '',\n          headerLeftContainerStyle: {\n            paddingLeft: 20\n          }\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Dashboard\",\n          component: Dashboard,\n          options: {\n            header: function header() {\n              return _jsx(Profile, {});\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"editor\",\n          component: PostEditor,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#0D0C13',\n              borderBottomWidth: 0\n            },\n            headerTintColor: '#fff'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"post\",\n          component: PostForm,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#0D0C13',\n              borderBottomWidth: 0\n            },\n            headerTintColor: '#fff'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"broadcast\",\n          component: BroadCast,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#0D0C13',\n              borderBottomWidth: 0\n            },\n            headerTintColor: '#fff',\n            transitionSpec: {\n              duration: 750,\n              easing: Easing.out(Easing.poly(4)),\n              timing: Animated.timing,\n              useNativeDriver: true\n            },\n            screenInterpolator: function screenInterpolator(sceneProps) {\n              var layout = sceneProps.layout,\n                  position = sceneProps.position,\n                  scene = sceneProps.scene;\n              var thisSceneIndex = scene.index;\n              var width = layout.initWidth;\n              var translateX = position.interpolate({\n                inputRange: [thisSceneIndex - 1, thisSceneIndex],\n                outputRange: [width, 0]\n              });\n              return {\n                transform: [{\n                  translateX: translateX\n                }]\n              };\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"location\",\n          component: LocationForm,\n          options: {\n            title: '',\n            headerStyle: {\n              backgroundColor: '#0D0C13',\n              borderBottomWidth: 0\n            },\n            headerTintColor: '#fff'\n          }\n        })]\n      })\n    })\n  });\n}\nAppRegistry.registerComponent('MyApp', function () {\n  return App;\n});","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","Provider","createStore","userProfileReducer","Dashboard","PostForm","BroadCast","PostEditor","LocationForm","Profile","Stack","store","App","animationEnabled","headerShown","headerStyled","backgroundColor","elevation","headerShadowVisible","headerTransparent","headerTitle","headerLeftContainerStyle","paddingLeft","header","title","headerStyle","borderBottomWidth","headerTintColor","transitionSpec","duration","easing","Easing","out","poly","timing","Animated","useNativeDriver","screenInterpolator","sceneProps","layout","position","scene","thisSceneIndex","index","width","initWidth","translateX","interpolate","inputRange","outputRange","transform","AppRegistry","registerComponent"],"sources":["E:/Upwork/React Native/AwesomeProject/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, AppRegistry, Animated, Easing } from 'react-native';\nimport { NativeRouter, Route, Link } from \"react-router-native\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Provider} from 'react-redux'\nimport { createStore } from 'redux';\nimport userProfileReducer from './src/Redux/Reducers/reducer';\nimport Dashboard from './src/Pages/Dashboard';\nimport PostForm from './src/Pages/Post';\nimport BroadCast from './src/Pages/Broadcast';\nimport PostEditor from './src/Pages/PostEditor';\nimport LocationForm from './src/Pages/Location/LocationForm';\nimport Profile from './src/Pages/Dashboard/profile';\n\nconst Stack = createNativeStackNavigator();\nconst store = createStore(userProfileReducer)\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Stack.Navigator\n            screenOptions={{\n              animationEnabled: false,\n              headerShown: true,\n              headerStyled: {\n                  backgroundColor: 'transparent',\n                  elevation: 0\n              },\n              headerShadowVisible: false,\n              headerTransparent: true,\n              headerTitle: '',\n              headerLeftContainerStyle:{\n                  paddingLeft:20\n              }\n\n\n}}\n        >\n          <Stack.Screen\n              name=\"Dashboard\"\n              component={Dashboard}\n              options={\n                {\n                  // headerShown: false,\n                  header: () => <Profile />,\n                }\n              }\n          />\n          <Stack.Screen\n            name=\"editor\"\n            component={PostEditor}\n            options={\n              {\n                title: '',\n                headerStyle: {\n                  backgroundColor: '#0D0C13',\n                  borderBottomWidth: 0,\n                },\n                headerTintColor: '#fff',\n              }\n            }\n          />\n          <Stack.Screen\n            name=\"post\"\n            component={PostForm}\n            options={\n              {\n                title: '',\n                headerStyle: {\n                  backgroundColor: '#0D0C13',\n                  borderBottomWidth: 0,\n                },\n                headerTintColor: '#fff',\n              }\n            }             \n          />\n          <Stack.Screen\n            name=\"broadcast\"\n            component={BroadCast}\n            options={\n              {\n                title: '',\n                headerStyle: {\n                  backgroundColor: '#0D0C13',\n                  borderBottomWidth: 0,\n                },\n                headerTintColor: '#fff',\n                transitionSpec: {\n                  duration: 750,\n                  easing: Easing.out(Easing.poly(4)),\n                  timing: Animated.timing,\n                  useNativeDriver: true,\n                },\n                screenInterpolator: sceneProps => {      \n                  const { layout, position, scene } = sceneProps\n            \n                  const thisSceneIndex = scene.index\n                  const width = layout.initWidth\n            \n                  const translateX = position.interpolate({\n                    inputRange: [thisSceneIndex - 1, thisSceneIndex],\n                    outputRange: [width, 0],\n                  })\n            \n                  return { transform: [ { translateX } ] }\n                },\n              }\n            } />\n          <Stack.Screen\n            name=\"location\"\n            component={LocationForm}\n            options={\n              {\n                title: '',\n                headerStyle: {\n                  backgroundColor: '#0D0C13',\n                  borderBottomWidth: 0,\n                },\n                headerTintColor: '#fff',\n              }\n            }\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n\n\nAppRegistry.registerComponent('MyApp', () => App);"],"mappings":"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"},"metadata":{},"sourceType":"module"}